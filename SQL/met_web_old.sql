CREATE TABLE WEB_FILE_MET 	(FILENAME1 VARCHAR(50),FILENAME2 VARCHAR(50),FILENAME3 VARCHAR(50),FILENAME4 VARCHAR(50));

DROP TABLE MET_WEB;
DROP TRIGGER MET_DEL;
DROP TRIGGER MET_INS;
DROP TRIGGER MET_UPDT;

DROP TABLE METKARTL_WEB;
DROP TRIGGER METKARTL_DEL;
DROP TRIGGER METKARTL_INS;
DROP TRIGGER METKARTL_UPDT;

DROP TABLE METANATHESI_WEB;
DROP TRIGGER METANATHESI_DEL;
DROP TRIGGER METANATHESI_INS;
DROP TRIGGER METANATHESI_UPDT;

DROP TABLE METSTUPROG_WEB;
DROP TRIGGER METSTUPROG_DEL;
DROP TRIGGER METSTUPROG_INS;
DROP TRIGGER METSTUPROG_UPDT;

CREATE TABLE MET_WEB		(MODIFTYPE VARCHAR(1),DATEMODIF TIMESTAMP, MITROO VARCHAR (8), TMIMACODE INTEGER , AR_T VARCHAR (10)  , EPVN VARCHAR (40)  , 
							ONOMA VARCHAR (30) , PATR VARCHAR (30)  , MHTR VARCHAR (30)  , SEX VARCHAR (1)  , YPHK VARCHAR (4) , COORIG VARCHAR (6)  , 
							NOMOSORIG VARCHAR (6)  , POLIORIG VARCHAR (6)  , BIRTHDATE DATE , NOMOSMHTR VARCHAR (6)  , POLIMHTR VARCHAR (6)  , 
							DIMOTOLOGIO VARCHAR (30)  , COKAT VARCHAR (6)  , NOMOSKAT VARCHAR (6)  , POLIKAT VARCHAR (6)  , PERIOXI VARCHAR (30)  , 
							ODOS VARCHAR (38)  , TT VARCHAR (5)  , TEL1 VARCHAR (23)  , TEL2 VARCHAR (15)  , EMAIL VARCHAR (40), MET_SEQNO INTEGER) PCTFREE 10;

 CREATE TRIGGER SYSADM.MET_DEL  AFTER DELETE ON MET
 ( EXECUTE INLINE 	( MET.MITROO, MET.TMIMACODE, MET.AR_T, MET.EPVN,MET.ONOMA, MET.PATR, MET.MHTR, MET.SEX, MET.YPHK, MET.COORIG, MET.NOMOSORIG, MET.POLIORIG, 
				MET. BIRTHDATE, MET.NOMOSMHTR, MET.POLIMHTR, MET.DIMOTOLOGIO, MET.COKAT, MET.NOMOSKAT, MET.POLIKAT, MET.PERIOXI, MET.ODOS, MET.TT, 
				MET.TEL1, MET.TEL2, MET.EMAIL,MET.MET_SEQNO)
  PROCEDURE: MET_DEL_PROC STATIC
  PARAMETERS
      String   : sMITROO
      Number    : nTMIMACODE
      String    : sAR_T
      String    : sEPVN
      String    : sONOMA
      String    : sPATR
      String    : sMHTR
      String    : sSEX
      String    : sYPHK
      String    : sCOORIG
      String    : sNOMOSORIG
      String    : sPOLIORIG
      Date/Time : dBIRTHDATE
      String    : sNOMOSMHTR
      String    : sPOLIMHTR
      String    : sDIMOTOLOGIO
      String    : sCOKAT
      String    : sNOMOSKAT
      String    : sPOLIKAT
      String    : sPERIOXI
      String    : sODOS
      String    : sTT
      String    : sTEL1
      String    : sTEL2
      String    : sEMAIL
      Number : nMET_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      set MOD_TYPE = 'd'
      Call SqlPrepare( hSql , 'INSERT INTO MET_WEB( MODIFTYPE,DATEMODIF,MITROO,TMIMACODE,AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,COORIG,NOMOSORIG,POLIORIG,BIRTHDATE,
					   NOMOSMHTR,POLIMHTR,DIMOTOLOGIO,COKAT,NOMOSKAT,POLIKAT,PERIOXI,ODOS,TT,TEL1,TEL2,EMAIL,MET_SEQNO)
       					  VALUES	(:MOD_TYPE,SYSDATETIME,:sMITROO,:nTMIMACODE,:sAR_T,:sEPVN,:sONOMA,:sPATR,:sMHTR,:sSEX,:sYPHK,:sCOORIG,:sNOMOSORIG,:sPOLIORIG,:dBIRTHDATE,
								:sNOMOSMHTR,:sPOLIMHTR,:sDIMOTOLOGIO,:sCOKAT,:sNOMOSKAT,:sPOLIKAT, :sPERIOXI,:sODOS,:sTT,:sTEL1,:sTEL2,:sEMAIL, :nMET_SEQNO)' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

 CREATE TRIGGER SYSADM.MET_INS  AFTER INSERT ON MET
 ( EXECUTE INLINE 	( MET.MITROO, MET.TMIMACODE, MET.AR_T, MET.EPVN,MET.ONOMA, MET.PATR, MET.MHTR, MET.SEX, MET.YPHK, MET.COORIG, MET.NOMOSORIG, MET.POLIORIG, 
				MET. BIRTHDATE, MET.NOMOSMHTR, MET.POLIMHTR, MET.DIMOTOLOGIO, MET.COKAT, MET.NOMOSKAT, MET.POLIKAT, MET.PERIOXI, MET.ODOS, MET.TT, 
				MET.TEL1, MET.TEL2, MET.EMAIL, MET.MET_SEQNO)
  PROCEDURE: MET_INS_PROC STATIC
  PARAMETERS
      String   : sMITROO
      Number    : nTMIMACODE
      String    : sAR_T
      String    : sEPVN
      String    : sONOMA
      String    : sPATR
      String    : sMHTR
      String    : sSEX
      String    : sYPHK
      String    : sCOORIG
      String    : sNOMOSORIG
      String    : sPOLIORIG
      Date/Time : dBIRTHDATE
      String    : sNOMOSMHTR
      String    : sPOLIMHTR
      String    : sDIMOTOLOGIO
      String    : sCOKAT
      String    : sNOMOSKAT
      String    : sPOLIKAT
      String    : sPERIOXI
      String    : sODOS
      String    : sTT
      String    : sTEL1
      String    : sTEL2
      String    : sEMAIL
      Number  : nMET_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      set MOD_TYPE = 'i'
      Call SqlPrepare( hSql , 'INSERT INTO MET_WEB( MODIFTYPE,DATEMODIF,MITROO,TMIMACODE,AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,COORIG,NOMOSORIG,POLIORIG,BIRTHDATE,
					   NOMOSMHTR,POLIMHTR,DIMOTOLOGIO,COKAT,NOMOSKAT,POLIKAT,PERIOXI,ODOS,TT,TEL1,TEL2,EMAIL,MET_SEQNO)
       					  VALUES	(:MOD_TYPE,SYSDATETIME,:sMITROO,:nTMIMACODE,:sAR_T,:sEPVN,:sONOMA,:sPATR,:sMHTR,:sSEX,:sYPHK,:sCOORIG,:sNOMOSORIG,:sPOLIORIG,:dBIRTHDATE,
								:sNOMOSMHTR,:sPOLIMHTR,:sDIMOTOLOGIO,:sCOKAT,:sNOMOSKAT,:sPOLIKAT, :sPERIOXI,:sODOS,:sTT,:sTEL1,:sTEL2,:sEMAIL, :nMET_SEQNO)' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

 CREATE TRIGGER SYSADM.MET_UPDT  AFTER UPDATE ON MET REFERENCING OLD AS OLD_MET NEW AS NEW_MET
 ( EXECUTE INLINE 	( MET.MITROO, MET.TMIMACODE, MET.AR_T, MET.EPVN,MET.ONOMA, MET.PATR, MET.MHTR, MET.SEX, MET.YPHK, MET.COORIG, MET.NOMOSORIG, MET.POLIORIG, 
				MET. BIRTHDATE, MET.NOMOSMHTR, MET.POLIMHTR, MET.DIMOTOLOGIO, MET.COKAT, MET.NOMOSKAT, MET.POLIKAT, MET.PERIOXI, MET.ODOS, MET.TT, 
				MET.TEL1, MET.TEL2, MET.EMAIL,MET.MET_SEQNO)
  PROCEDURE: MET_UPDT_PROC STATIC
  PARAMETERS
      String   : sMITROO
      Number    : nTMIMACODE
      String    : sAR_T
      String    : sEPVN
      String    : sONOMA
      String    : sPATR
      String    : sMHTR
      String    : sSEX
      String    : sYPHK
      String    : sCOORIG
      String    : sNOMOSORIG
      String    : sPOLIORIG
      Date/Time : dBIRTHDATE
      String    : sNOMOSMHTR
      String    : sPOLIMHTR
      String    : sDIMOTOLOGIO
      String    : sCOKAT
      String    : sNOMOSKAT
      String    : sPOLIKAT
      String    : sPERIOXI
      String    : sODOS
      String    : sTT
      String    : sTEL1
      String    : sTEL2
      String    : sEMAIL
      Number : nMET_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      set MOD_TYPE = 'u'
      Call SqlPrepare( hSql , 'INSERT INTO MET_WEB( MODIFTYPE,DATEMODIF,MITROO,TMIMACODE,AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,COORIG,NOMOSORIG,POLIORIG,BIRTHDATE,
					   NOMOSMHTR,POLIMHTR,DIMOTOLOGIO,COKAT,NOMOSKAT,POLIKAT,PERIOXI,ODOS,TT,TEL1,TEL2,EMAIL, MET_SEQNO)
       					  VALUES	(:MOD_TYPE,SYSDATETIME,:sMITROO,:nTMIMACODE,:sAR_T,:sEPVN,:sONOMA,:sPATR,:sMHTR,:sSEX,:sYPHK,:sCOORIG,:sNOMOSORIG,:sPOLIORIG,:dBIRTHDATE,
								:sNOMOSMHTR,:sPOLIMHTR,:sDIMOTOLOGIO,:sCOKAT,:sNOMOSKAT,:sPOLIKAT, :sPERIOXI,:sODOS,:sTT,:sTEL1,:sTEL2,:sEMAIL, :nMET_SEQNO)' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

CREATE TABLE METKARTL_WEB 		( MODIFTYPE VARCHAR(1),DATEMODIF TIMESTAMP, MITROO VARCHAR (8),PROGCODE INTEGER,AK INTEGER, PERIOD VARCHAR(2), COURCODE INTEGER,
								TMIMACODE INTEGER, TYPOS VARCHAR (2)  , GRADENOR FLOAT , GRADEPAN FLOAT , APALAG CHAR (1)  , PERIODANIKI VARCHAR (2), METKARTL_SEQNO INTEGER ) PCTFREE 10;

CREATE TRIGGER SYSADM.METKARTL_DEL  AFTER  DELETE  ON METKARTL
( EXECUTE INLINE ( METKARTL.MITROO,METKARTL.PROGCODE,METKARTL.AK, METKARTL.PERIOD,METKARTL.COURCODE,METKARTL.TMIMACODE,  METKARTL.TYPOS,METKARTL.GRADENOR, 
				METKARTL.GRADEPAN, METKARTL.APALAG, METKARTL.PERIODANIKI,METKARTL.METKARTL_SEQNO)
  PROCEDURE: METKARTL_DEL_PROC STATIC
  PARAMETERS
      String :sMITROO	
      Number : nPROGCODE
      Number : nAK
      String	 : sPERIOD
      Number : nCOURCODE
      Number : nTMIMACODE
      String : sTYPOS
      Number : nGRADENOR
      Number : nGRADEPAN
      String : sAPALAG
      String : sPERIODANIKI
      Number : nMETKARTL_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      Set MOD_TYPE = 'd'
      Call SqlPrepare( hSql , 'INSERT INTO METKARTL_WEB  ( MODIFTYPE,DATEMODIF,MITROO,PROGCODE,AK,PERIOD,COURCODE,TMIMACODE,TYPOS,GRADENOR,GRADEPAN,APALAG,PERIODANIKI,METKARTL_SEQNO) 
					   VALUES(:MOD_TYPE , SYSDATETIME , :sMITROO ,:nPROGCODE , :nAK , :sPERIOD, :nCOURCODE, :nTMIMACODE ,:sTYPOS , :nGRADENOR, :nGRADEPAN , :sAPALAG , :sPERIODANIKI, :nMETKARTL_SEQNO ) ' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

CREATE TRIGGER SYSADM.METKARTL_INS  AFTER INSERT  ON METKARTL
( EXECUTE INLINE ( METKARTL.MITROO, METKARTL.PROGCODE,METKARTL.AK, METKARTL.PERIOD,METKARTL.COURCODE, METKARTL.TMIMACODE,METKARTL.TYPOS,METKARTL.GRADENOR, 
				METKARTL.GRADEPAN, METKARTL.APALAG, METKARTL.PERIODANIKI,METKARTL_SEQNO)
  PROCEDURE: METKARTL_INS_PROC STATIC
  PARAMETERS
      String :sMITROO	
      Number : nPROGCODE
      Number : nAK
      String	 : sPERIOD
      Number : nCOURCODE
      Number : nTMIMACODE
      String : sTYPOS
      Number : nGRADENOR
      Number : nGRADEPAN
      String : sAPALAG
      String : sPERIODANIKI
      Number : nMETKARTL_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      Set MOD_TYPE = 'i'
      Call SqlPrepare( hSql , 'INSERT INTO METKARTL_WEB  ( MODIFTYPE,DATEMODIF,MITROO,PROGCODE,AK,PERIOD,COURCODE,TMIMACODE,TYPOS,GRADENOR,GRADEPAN,APALAG,PERIODANIKI,METKARTL_SEQNO) 
					   VALUES(:MOD_TYPE , SYSDATETIME , :sMITROO , :nPROGCODE , :nAK , :sPERIOD, :nCOURCODE, :nTMIMACODE ,:sTYPOS , :nGRADENOR, :nGRADEPAN , :sAPALAG , :sPERIODANIKI, :nMETKARTL_SEQNO ) ' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

CREATE TRIGGER SYSADM.METKARTL_UPDT  AFTER UPDATE  ON METKARTL  REFERENCING OLD AS OLD_METKARTL NEW AS NEW_METKARTL
( EXECUTE INLINE ( METKARTL.MITROO, METKARTL.PROGCODE,METKARTL.AK, METKARTL.PERIOD,METKARTL.COURCODE, METKARTL.TMIMACODE,METKARTL.TYPOS,METKARTL.GRADENOR, 
				METKARTL.GRADEPAN, METKARTL.APALAG, METKARTL.PERIODANIKI,METKARTL.METKARTL_SEQNO)
  PROCEDURE: METKARTL_UPDT_PROC STATIC
  PARAMETERS
      String :sMITROO	
      Number : nPROGCODE
      Number : nAK
      String	 : sPERIOD
      Number : nCOURCODE
      Number : nTMIMACODE
      String : sTYPOS
      Number : nGRADENOR
      Number : nGRADEPAN
      String : sAPALAG
      String : sPERIODANIKI
      Number : nMETKARTL_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      Set MOD_TYPE = 'u'
      Call SqlPrepare( hSql , 'INSERT INTO METKARTL_WEB  ( MODIFTYPE,DATEMODIF,MITROO,PROGCODE,AK,PERIOD,COURCODE,TMIMACODE,TYPOS,GRADENOR,GRADEPAN,APALAG,PERIODANIKI,METKARTL_SEQNO) 
					   VALUES(:MOD_TYPE , SYSDATETIME , :sMITROO , :nPROGCODE , :nAK , :sPERIOD, :nCOURCODE,:nTMIMACODE ,:sTYPOS , :nGRADENOR, :nGRADEPAN , :sAPALAG , :sPERIODANIKI, :nMETKARTL_SEQNO ) ' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

CREATE TABLE METANATHESI_WEB 	(MODIFTYPE VARCHAR(1),DATEMODIF TIMESTAMP,CODESYN REAL,DATEANATH DATE, TMIMACODE INTEGER,MITROO VARCHAR(8), DATEANAG DATE,METANATHESI_SEQNO INTEGER);

CREATE TRIGGER SYSADM.METANATHESI_DEL  AFTER DELETE ON METANATHESI
 ( EXECUTE INLINE 	( METANATHESI.CODESYN,METANATHESI.DATEANATH,METANATHESI.TMIMACODE,METANATHESI.MITROO,METANATHESI.DATEANAG,METANATHESI.METANATHESI_SEQNO)
  PROCEDURE: ANATHESI_DEL_PROC STATIC
  PARAMETERS
      Number      : nCODESYN
      Date/Time  : dDATEANATH
      Number     : nTMIMACODE
      String        : sMITROO
      Date/Time : dDATEANAG
      Number : nMETANATHESI_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      set MOD_TYPE = 'd'
      Call SqlPrepare( hSql , 'INSERT INTO METANATHESI_WEB( MODIFTYPE,DATEMODIF,CODESYN,DATEANATH,TMIMACODE,MITROO,DATEANAG,METANATHESI_SEQNO)
       					  VALUES	(:MOD_TYPE,SYSDATETIME,:nCODESYN,:dDATEANATH,:nTMIMACODE,:sMITROO,:dDATEANAG, :nMETANATHESI_SEQNO)' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

CREATE TRIGGER SYSADM.METANATHESI_INS  AFTER INSERT ON METANATHESI
 ( EXECUTE INLINE 	( METANATHESI.CODESYN,METANATHESI.DATEANATH,METANATHESI.TMIMACODE,METANATHESI.MITROO,METANATHESI.DATEANAG,METANATHESI.METANATHESI_SEQNO)
  PROCEDURE: ANATHESI_INS_PROC STATIC
  PARAMETERS
      Number      : nCODESYN
      Date/Time  : dDATEANATH
      Number     : nTMIMACODE
      String        : sMITROO
      Date/Time : dDATEANAG
      Number : nMETANATHESI_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      set MOD_TYPE = 'i'
      Call SqlPrepare( hSql , 'INSERT INTO METANATHESI_WEB( MODIFTYPE,DATEMODIF,CODESYN,DATEANATH,TMIMACODE,MITROO,DATEANAG,METANATHESI_SEQNO)
       					  VALUES	(:MOD_TYPE,SYSDATETIME,:nCODESYN,:dDATEANATH,:nTMIMACODE,:sMITROO,:dDATEANAG, :nMETANATHESI_SEQNO)' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

CREATE TRIGGER SYSADM.METANATHESI_UPDT AFTER UPDATE ON METANATHESI REFERENCING OLD AS OLD_METANATHESI NEW AS NEW_METANATHESI
 ( EXECUTE INLINE 	( METANATHESI.CODESYN,METANATHESI.DATEANATH,METANATHESI.TMIMACODE,METANATHESI.MITROO,OLD_METANATHESI.DATEANAG,NEW_METANATHESI.DATEANAG,METANATHESI.METANATHESI_SEQNO)
  PROCEDURE: ANATHESI_UPDT_PROC STATIC
  PARAMETERS
      Number      : nCODESYN
      Date/Time  : dDATEANATH
      Number     : nTMIMACODE
      String        : sMITROO
      Date/Time : dOLD_DATEANAG
      Date/Time : dNEW_DATEANAG
      Number : nMETANATHESI_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      set MOD_TYPE = 'u'
      if dOLD_DATEANAG != dNEW_DATEANAG
        Call SqlPrepare( hSql , 'INSERT INTO METANATHESI_WEB( MODIFTYPE,DATEMODIF,CODESYN,DATEANATH,TMIMACODE,MITROO,DATEANAG,METANATHESI_SEQNO)
       					  VALUES	(:MOD_TYPE,SYSDATETIME,:nCODESYN,:dDATEANATH,:nTMIMACODE,:sMITROO,:dNEW_DATEANAG, :nMETANATHESI_SEQNO)' )
        Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

CREATE TABLE METSTUPROG_WEB 	(MODIFTYPE VARCHAR(1),DATEMODIF TIMESTAMP,MITROO VARCHAR(8), PROGCODE INTEGER, METSTUPROG_SEQNO INTEGER);

CREATE TRIGGER SYSADM.METSTUPROG_DEL  AFTER DELETE ON METSTUPROG
 ( EXECUTE INLINE 	( METSTUPROG.MITROO,METSTUPROG.PROGCODE,METSTUPROG_SEQNO)
  PROCEDURE: STUPROG_DEL_PROC STATIC
  PARAMETERS
      String        : sMITROO
      Number     : nPROGCODE
      Number : nMETSTUPROG_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      set MOD_TYPE = 'd'
      Call SqlPrepare( hSql , 'INSERT INTO METSTUPROG_WEB( MODIFTYPE,DATEMODIF,MITROO,PROGCODE,METSTUPROG_SEQNO)
       					  VALUES	(:MOD_TYPE,SYSDATETIME,:sMITROO,:nPROGCODE, :nMETSTUPROG_SEQNO)' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

CREATE TRIGGER SYSADM.METSTUPROG_INS  AFTER INSERT ON METSTUPROG
 ( EXECUTE INLINE 	( METSTUPROG.MITROO,METSTUPROG.PROGCODE,METSTUPROG_SEQNO)
  PROCEDURE: STUPROG_INS_PROC STATIC
  PARAMETERS
      String        : sMITROO
      Number     : nPROGCODE
      Number : nMETSTUPROG_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      set MOD_TYPE = 'i'
      Call SqlPrepare( hSql , 'INSERT INTO METSTUPROG_WEB( MODIFTYPE,DATEMODIF,MITROO,PROGCODE,METSTUPROG_SEQNO)
       					  VALUES	(:MOD_TYPE,SYSDATETIME,:sMITROO,:nPROGCODE, :nMETSTUPROG_SEQNO)' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;

CREATE TRIGGER SYSADM.METSTUPROG_UPDT  AFTER UPDATE ON METSTUPROG REFERENCING OLD AS OLD_METSTUPROG NEW AS NEW_METSTUPROG
 ( EXECUTE INLINE 	( METSTUPROG.MITROO,OLD_METSTUPROG.PROGCODE,NEW_METSTUPROG.PROGCODE,METSTUPROG.METSTUPROG_SEQNO)
  PROCEDURE: STUPROG_UPDT_PROC STATIC
  PARAMETERS
      String        : sMITROO
      Number     : nOLD_PROGCODE
      Number     : nNEW_PROGCODE
      Number : nMETSTUPROG_SEQNO
  LOCAL VARIABLES
    SQL HANDLE: hSql
    String : MOD_TYPE
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute
      set MOD_TYPE = 'u'
      if nOLD_PROGCODE != nNEW_PROGCODE
        Call SqlPrepare( hSql , 'INSERT INTO METSTUPROG_WEB( MODIFTYPE,DATEMODIF,MITROO,PROGCODE,METSTUPROG_SEQNO)
       					  VALUES	(:MOD_TYPE,SYSDATETIME,:sMITROO,:nNEW_PROGCODE, :nMETSTUPROG_SEQNO)' )
        Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql )
  )
FOR EACH ROW;
