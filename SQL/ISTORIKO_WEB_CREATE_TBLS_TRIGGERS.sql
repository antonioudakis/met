@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;
@@@@@@@@ PUBLIC SYNONYMS FOR USERS @@@@@@@@@@@@@@@@@@;
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;

CREATE PUBLIC SYNONYM AITISI FOR SYSADM.AITISI ;
CREATE PUBLIC SYNONYM AITISIM FOR SYSADM.AITISIM ;
CREATE PUBLIC SYNONYM AIUOYSES FOR SYSADM.AIUOYSES ;
CREATE PUBLIC SYNONYM ANATHESI FOR SYSADM.ANATHESI ;
CREATE PUBLIC SYNONYM ANATHESI_IST FOR SYSADM.ANATHESI_IST;
CREATE PUBLIC SYNONYM APALAG FOR SYSADM.APALAG ;
CREATE PUBLIC SYNONYM APOFOIT FOR SYSADM.APOFOIT;
CREATE PUBLIC SYNONYM APOTELESMATA FOR SYSADM.APOTELESMATA ;
CREATE PUBLIC SYNONYM DAN FOR SYSADM.DAN ;
CREATE PUBLIC SYNONYM DEP FOR SYSADM.DEP ;
CREATE PUBLIC SYNONYM DEPADIES FOR SYSADM.DEPADIES ;
CREATE PUBLIC SYNONYM DEPMA FOR SYSADM.DEPMA ;
CREATE PUBLIC SYNONYM DEPSPOYD FOR SYSADM.DEPSPOYD ;
CREATE PUBLIC SYNONYM DIAGRAFENTES FOR SYSADM.DIAGRAFENTES ;
CREATE PUBLIC SYNONYM DIAK FOR SYSADM.DIAK ;
CREATE PUBLIC SYNONYM DIDAKTRA FOR SYSADM.DIDAKTRA ;
CREATE PUBLIC SYNONYM DIPLGRADE FOR SYSADM.DIPLGRADE ;
CREATE PUBLIC SYNONYM DIPLGRADE_IST FOR SYSADM.DIPLGRADE_IST ;
CREATE PUBLIC SYNONYM DIPLSYNERG FOR SYSADM.DIPLSYNERG ;
CREATE PUBLIC SYNONYM EGRAFI FOR SYSADM.EGRAFI ;
CREATE PUBLIC SYNONYM HKARTELLA FOR SYSADM.HKARTELLA ;
CREATE PUBLIC SYNONYM HKARTELLA_IST FOR SYSADM.HKARTELLA_IST ;
CREATE PUBLIC SYNONYM HST_F FOR SYSADM.HST_F ;
CREATE PUBLIC SYNONYM HST_F_IST FOR SYSADM.HST_F_IST ;
CREATE PUBLIC SYNONYM KARTELLA FOR SYSADM.KARTELLA ;
CREATE PUBLIC SYNONYM KARTELLA_IST FOR SYSADM.KARTELLA_IST ;
CREATE PUBLIC SYNONYM KART_DISK FOR SYSADM.KART_DISK ;
CREATE PUBLIC SYNONYM KART_WEB FOR SYSADM.KART_WEB ;
CREATE PUBLIC SYNONYM KATEF FOR SYSADM.KATEF ;
CREATE PUBLIC SYNONYM LANG FOR SYSADM.LANG  ;
CREATE PUBLIC SYNONYM LEKTIKA FOR SYSADM.LEKTIKA ;
CREATE PUBLIC SYNONYM MATH FOR SYSADM.MATH ;
CREATE PUBLIC SYNONYM MET FOR SYSADM.MET ;
CREATE PUBLIC SYNONYM METAB FOR SYSADM.METAB ;
CREATE PUBLIC SYNONYM METANATHESI FOR SYSADM.METANATHESI ;
CREATE PUBLIC SYNONYM METANATHESI_WEB FOR SYSADM.METANATHESI_WEB ;
CREATE PUBLIC SYNONYM METCOURSE FOR SYSADM.METCOURSE ;
CREATE PUBLIC SYNONYM METDEPMA FOR SYSADM.METDEPMA ;
CREATE PUBLIC SYNONYM METDIAKOP FOR SYSADM.METDIAKOP ;
CREATE PUBLIC SYNONYM METDIPLGRADE FOR SYSADM.METDIPLGRADE ;
CREATE PUBLIC SYNONYM METDSYNERG FOR SYSADM.METDSYNERG ;
CREATE PUBLIC SYNONYM METEGR FOR SYSADM.METEGR ;
CREATE PUBLIC SYNONYM METEPIBLMA FOR SYSADM.METEPIBLMA ;
CREATE PUBLIC SYNONYM METKARTL FOR SYSADM.METKARTL ;
CREATE PUBLIC SYNONYM METKARTL_WEB FOR SYSADM.METKARTL_WEB ;
CREATE PUBLIC SYNONYM METKATEF FOR SYSADM.METKATEF ;
CREATE PUBLIC SYNONYM METKRISI FOR SYSADM.METKRISI ;
CREATE PUBLIC SYNONYM METKRISIDEP FOR SYSADM.METKRISIDEP ;
CREATE PUBLIC SYNONYM METLANG FOR SYSADM.METLANG ;
CREATE PUBLIC SYNONYM METPROCORP FOR SYSADM.METPROCORP ;
CREATE PUBLIC SYNONYM METPROGAT FOR SYSADM.METPROGAT ;
CREATE PUBLIC SYNONYM METPROGRAM FOR SYSADM.METPROGRAM ;
CREATE PUBLIC SYNONYM METPROOD FOR SYSADM.METPROOD ;
CREATE PUBLIC SYNONYM METPROSPU FOR SYSADM.METPROSPU ;
CREATE PUBLIC SYNONYM METPTYX FOR SYSADM.METPTYX ;
CREATE PUBLIC SYNONYM METSTUPROG FOR SYSADM.METSTUPROG ;
CREATE PUBLIC SYNONYM METSTUPROG_WEB FOR SYSADM.METSTUPROG_WEB ;
CREATE PUBLIC SYNONYM METTEACH FOR SYSADM.METTEACH ;
CREATE PUBLIC SYNONYM METTMIMA FOR SYSADM.METTMIMA  ;
CREATE PUBLIC SYNONYM METTOMEIS FOR SYSADM.METTOMEIS  ;
CREATE PUBLIC SYNONYM METUNIV FOR SYSADM.METUNIV  ;
CREATE PUBLIC SYNONYM METXRHMA FOR SYSADM.METXRHMA  ;
CREATE PUBLIC SYNONYM MET_KART_DISK FOR SYSADM.MET_KART_DISK  ;
CREATE PUBLIC SYNONYM MET_WEB FOR SYSADM.MET_WEB  ;
CREATE PUBLIC SYNONYM OBLISTU FOR SYSADM.OBLISTU  ;
CREATE PUBLIC SYNONYM OBLISTUD FOR SYSADM.OBLISTUD  ;
CREATE PUBLIC SYNONYM OMADAEPI FOR SYSADM.OMADAEPI  ;
CREATE PUBLIC SYNONYM OMADAEPI6 FOR SYSADM.OMADAEPI6  ;
CREATE PUBLIC SYNONYM OMADALEKT FOR SYSADM.OMADALEKT  ;
CREATE PUBLIC SYNONYM OMADEPIM FOR SYSADM.OMADEPIM  ;
CREATE PUBLIC SYNONYM OMADEPIM6 FOR SYSADM.OMADEPIM6  ;
CREATE PUBLIC SYNONYM ORKOMOSIA FOR SYSADM.ORKOMOSIA  ;
CREATE PUBLIC SYNONYM PERIOXES FOR SYSADM.PERIOXES  ;
CREATE PUBLIC SYNONYM PLTAB FOR SYSADM.PLTAB  ;
CREATE PUBLIC SYNONYM PROAIRET FOR SYSADM.PROAIRET  ;
CREATE PUBLIC SYNONYM PROAPET FOR SYSADM.PROAPET  ;
CREATE PUBLIC SYNONYM PROYPDIL FOR SYSADM.PROYPDIL  ;
CREATE PUBLIC SYNONYM PROYPROG FOR SYSADM.PROYPROG  ;
CREATE PUBLIC SYNONYM REQDIPL FOR SYSADM.REQDIPL  ;
CREATE PUBLIC SYNONYM REQDIPLEP FOR SYSADM.REQDIPLEP  ;
CREATE PUBLIC SYNONYM SEIRAEPIT FOR SYSADM.SEIRAEPIT  ;
CREATE PUBLIC SYNONYM ST_BONUS FOR SYSADM.ST_BONUS  ;
CREATE PUBLIC SYNONYM ST_F FOR SYSADM.ST_F  ;
CREATE PUBLIC SYNONYM ST_F_IST FOR SYSADM.ST_F_IST  ;
CREATE PUBLIC SYNONYM ST_F_WEB FOR SYSADM.ST_F_WEB  ;
CREATE PUBLIC SYNONYM ST_M FOR SYSADM.ST_M  ;
CREATE PUBLIC SYNONYM SYGR FOR SYSADM.SYGR  ;
CREATE PUBLIC SYNONYM SYGRAMA FOR SYSADM.SYGRAMA  ;
CREATE PUBLIC SYNONYM SYGXVN FOR SYSADM.SYGXVN  ;
CREATE PUBLIC SYNONYM SYNDEDEMENA FOR SYSADM.SYNDEDEMENA  ;
CREATE PUBLIC SYNONYM SYNEX FOR SYSADM.SYNEX  ;
CREATE PUBLIC SYNONYM TABLESN FOR SYSADM.TABLESN  ;
CREATE PUBLIC SYNONYM TMHMA FOR SYSADM.TMHMA  ;
CREATE PUBLIC SYNONYM TMIPRO FOR SYSADM.TMIPRO  ;
CREATE PUBLIC SYNONYM TOMEIS FOR SYSADM.TOMEIS ;
CREATE PUBLIC SYNONYM TREXON FOR SYSADM.TREXON  ;
CREATE PUBLIC SYNONYM UNIVERSITY FOR SYSADM.UNIVERSITY ;
CREATE PUBLIC SYNONYM USERTAB FOR SYSADM.USERTAB ;
CREATE PUBLIC SYNONYM WEB_FILE FOR SYSADM.WEB_FILE ;
CREATE PUBLIC SYNONYM WEB_FILE_MET FOR SYSADM.WEB_FILE_MET ;
CREATE PUBLIC SYNONYM YPAL FOR SYSADM.YPAL ;
CREATE PUBLIC SYNONYM YPCOURSE FOR SYSADM.YPCOURSE ;
CREATE PUBLIC SYNONYM YPMADEPI FOR SYSADM.YPMADEPI ;
CREATE PUBLIC SYNONYM YPMADEPM FOR SYSADM.YPMADEPM ;
CREATE PUBLIC SYNONYM YPMATH FOR SYSADM.YPMATH ;
CREATE PUBLIC SYNONYM YPOTR FOR SYSADM.YPOTR ;
CREATE PUBLIC SYNONYM YPOTRON FOR SYSADM.YPOTRON ;
CREATE PUBLIC SYNONYM YPXOMADA FOR SYSADM.YPXOMADA ;

CREATE PUBLIC SYNONYM ROHFOIT FOR SYSADM.ROHFOIT ;
CREATE PUBLIC SYNONYM ROHFOITOLD FOR SYSADM.ROHFOITOLD ;
CREATE PUBLIC SYNONYM ROHOMADA FOR SYSADM.ROHOMADA ;
CREATE PUBLIC SYNONYM ROHKAT FOR SYSADM.ROHKAT ;
CREATE PUBLIC SYNONYM ROHOMADA FOR SYSADM.ROHOMADA ;


CREATE PUBLIC SYNONYM WEBAIT_PISTOP FOR SYSADM.WEBAIT_PISTOP ;
CREATE PUBLIC SYNONYM WEBKIND_PISTOP FOR SYSADM.WEBKIND_PISTOP ;
CREATE PUBLIC SYNONYM WEBAIT_EGR FOR SYSADM.WEBAIT_EGR ;
CREATE PUBLIC SYNONYM WEBAIT_DIL FOR SYSADM.WEBAIT_DIL ;
CREATE PUBLIC SYNONYM WEB_OBLD_PROS FOR SYSADM.WEB_OBLD_PROS  ;
CREATE PUBLIC SYNONYM WEB_OBLU_PROS FOR SYSADM.WEB_OBLU_PROS  ;
CREATE PUBLIC SYNONYM WEB_EGR_PROS FOR SYSADM.WEB_EGR_PROS  ;
CREATE PUBLIC SYNONYM WEB_KARTELLA_PROS FOR SYSADM.WEB_KARTELLA_PROS  ;
CREATE PUBLIC SYNONYM WEB_OBLDPR_PROS FOR SYSADM.WEB_OBLDPR_PROS  ;
CREATE PUBLIC SYNONYM WEB_OBLUPR_PROS FOR SYSADM.WEB_OBLUPR_PROS  ;
CREATE PUBLIC SYNONYM WEB_EGRPR_PROS FOR SYSADM.WEB_EGRPR_PROS  ;
CREATE PUBLIC SYNONYM WEB_KARTPR_PROS FOR SYSADM.WEB_KARTPR_PROS  ;
CREATE PUBLIC SYNONYM SYGR FOR SYSADM.SYGR  ;
CREATE PUBLIC SYNONYM SYGRAMA FOR SYSADM.SYGRAMA  ;
CREATE PUBLIC SYNONYM SYGRFOIT FOR SYSADM.SYGRFOIT  ;
CREATE PUBLIC SYNONYM SYGREJAREP FOR SYSADM.SYGREJAREP  ;
 




&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;
&&&&&&&&&&&&&&&&&&&& CREATE TABLES ISTORIKOY &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;
1.;
Create Table ST_F_IST ( MODIF_TYPE VARCHAR (1)  ,DATE_MODIF TIMESTAMP , USERNAME VARCHAR (10), K_F VARCHAR (8)  NOT NULL, K_TM INTEGER , AR_T VARCHAR(8)  , EPVN VARCHAR (60)  , 
ONOMA VARCHAR (60)  , PATR VARCHAR (60)  ,
MHTR VARCHAR (60)  , SEX VARCHAR (1)  , YPHK VARCHAR (4)  , KAT VARCHAR (2)  , STATUS VARCHAR (2)  , AK INTEGER , XU VARCHAR (1)  , H_EGR DATE , EJ VARCHAR(2)  , TROPOS VARCHAR (3)  ,
SXOLH VARCHAR (60)  , PRAXH VARCHAR (10)  , COORIG VARCHAR (6)  , NOMOSORIG VARCHAR (6)  , POLIORIG VARCHAR (6)  , BIRTHDATE DATE , NOMOSMHTR VARCHAR (6)  , POLIMHTR VARCHAR (6)  ,
DIMOSKINOT INTEGER , DIMOTOLOGIO VARCHAR (30)  , COKAT VARCHAR (6)  , NOMOSKAT VARCHAR (6)  , POLIKAT VARCHAR (6)  , PERIOXI VARCHAR (30)  , ODOS VARCHAR (38)  , TT VARCHAR (5)  ,
TEL1 VARCHAR (15)  , TEL2 VARCHAR (15)  , SIRA INTEGER , MONADES FLOAT , LYKIO VARCHAR (60)  , ETOSAPOF INTEGER , APOLYTIRIO VARCHAR (8)  , STUSTATUS 
VARCHAR (2)  , ETOSDIPL SMALLINT , 
SXOLIA VARCHAR (200)  , MH_YPOXR_GL VARCHAR (1)  , EPVN_OLD VARCHAR (60)  , ST_F_SEQNO INTEGER , AROFEIL INTEGER , COD_LOCKER VARCHAR (5)  ,
DRESS_ROOM VARCHAR (20),
 ST_FROWID CHAR(40)  ) PCTFREE 10;
2.;
Create Table HST_F_IST (MODIF_TYPE VARCHAR(1), DATE_MODIF TIMESTAMP, USERNAME VARCHAR(10), K_F VARCHAR (8)  NOT NULL, K_TM INTEGER , AR_T VARCHAR(8)  , EPVN VARCHAR (60)  ,
ONOMA VARCHAR (60)  , PATR VARCHAR (60)  , MHTR VARCHAR (60)  , 
 SEX VARCHAR (1)  , YPHK VARCHAR (4)  , KAT VARCHAR (2)  , STATUS VARCHAR (2)  , AK INTEGER , XU VARCHAR (1)  , H_EGR DATE , EJ VARCHAR (2)  , TROPOS
VARCHAR (3)  , SXOLH VARCHAR (60)  ,
PRAXH VARCHAR (10)  , COORIG VARCHAR (6)  , NOMOSORIG VARCHAR (6)  , POLIORIG VARCHAR (6)  , BIRTHDATE DATE , NOMOSMHTR VARCHAR (6)  , POLIMHTR
VARCHAR (6)  , DIMOSKINOT INTEGER , 
 DIMOTOLOGIO VARCHAR (30)  , COKAT VARCHAR (6)  , NOMOSKAT VARCHAR (6)  , POLIKAT VARCHAR (6)  , PERIOXI VARCHAR (30)  , ODOS VARCHAR (38)  , TT VARCHAR (5)  , TEL1 VARCHAR (15)  , 
 TEL2 VARCHAR (15)  , SIRA INTEGER , MONADES INTEGER , LYKIO VARCHAR (60)  , ETOSAPOF INTEGER , APOLYTIRIO VARCHAR (8)  , STUSTATUS VARCHAR (2)  ,
ETOSDIPL SMALLINT , 
 DATEEJET DATE , MOANA FLOAT , TITLOSMAU VARCHAR (100)  , ARDIPL VARCHAR (15)  , GRADEAPOF FLOAT , PERIOD VARCHAR (15)  , LSTEXT LONG , SIRAEPIT 
INTEGER , 
 ETOSAPOFPOL INTEGER , GRADENEW FLOAT , EPVN_OLD VARCHAR (60)  , THEMA LONG  ) PCTFREE 10;
3.;
Create Table KARTELLA_IST ( MODIF_TYPE VARCHAR (1)  , USERNAME VARCHAR(10), DATE_MODIF TIMESTAMP , K_TM INTEGER , K_F VARCHAR (8)  , EJ VARCHAR (2)  ,
K_M INTEGER , TYPOS VARCHAR (2)  , 
GRADENOR INTEGER , OMADA VARCHAR (4)  , YPEROMA VARCHAR (4)  , AK INTEGER , GRADEPAN INTEGER , XU VARCHAR (1)  , VELTIOSI VARCHAR (1)  , EPEP 
VARCHAR (1)  , EJANIKI VARCHAR (2)  ,
 GRADEXARI INTEGER ,  KAR_SEQNO INTEGER , KARTROWID CHAR (40)   ) PCTFREE 10;
4.;
Create Table HKARTELLA_IST ( MODIF_TYPE VARCHAR(1), DATE_MODIF TIMESTAMP, USERNAME VARCHAR(10), K_TM INTEGER , K_F VARCHAR (8)  NOT NULL, EJ
VARCHAR (2)  NOT NULL, 
K_M INTEGER NOT NULL, TITLOS VARCHAR (100)  , GRADE INTEGER , AK INTEGER , XU VARCHAR (1)  , TYPOSMA VARCHAR (2)   ) PCTFREE 10;
5.;
Create Table DIPLGRADE_IST (MODIF_TYPE VARCHAR(1), DATE_MODIF TIMESTAMP, USERNAME VARCHAR(10),  CODESYN FLOAT NOT NULL, AM_DEP INTEGER NOT NULL, TYPEDEP VARCHAR (1)  ,
 GRADE FLOAT , AA INTEGER ) PCTFREE 10;
6.;
Create Table ANATHESI_IST (MODIF_TYPE VARCHAR(1), DATE_MODIF TIMESTAMP, USERNAME VARCHAR(10), CODESYN FLOAT , AKANA INTEGER , XUANA VARCHAR (1)  ,
DATEANATH DATE , 
DATEANAMAU DATE , AKAPOF INTEGER , AKEJET INTEGER , PERIOD VARCHAR (1)  , DATEEJET DATE , MOANA FLOAT , TITLOSMAU VARCHAR (100)  , 
PERAIT VARCHAR (1)  , P_AK_EJET INTEGER,THEMA LONG  ) PCTFREE 10;

10.;
Create Table ST_F_WEB ( MODIF_TYPE VARCHAR (1)  , DATE_MODIF TIMESTAMP ,  USERNAME VARCHAR (10), ST_F_SEQNO INTEGER ,  K_F VARCHAR (8)  NOT NULL,
K_TM INTEGER , 
AR_T VARCHAR (7)  , EPVN VARCHAR (60)  , ONOMA VARCHAR (60)  , PATR VARCHAR (60)  ,MHTR VARCHAR (60)  , SEX VARCHAR (1)  , YPHK VARCHAR (4)  , KAT VARCHAR (2)  , STATUS VARCHAR (2)  ,
 AK INTEGER , XU VARCHAR (1)  , H_EGR DATE , EJ VARCHAR (2)  , TROPOS VARCHAR (3)  ,SXOLH VARCHAR (60)  , PRAXH VARCHAR (10)  , COORIG VARCHAR (6)  , 
NOMOSORIG VARCHAR (6)  , 
POLIORIG VARCHAR (6)  , BIRTHDATE DATE , NOMOSMHTR VARCHAR (6)  , POLIMHTR VARCHAR (6)  ,DIMOSKINOT INTEGER , DIMOTOLOGIO VARCHAR (30)  , COKAT 
VARCHAR (6)  ,
 NOMOSKAT VARCHAR (6)  , POLIKAT VARCHAR (6)  , PERIOXI VARCHAR (30)  , ODOS VARCHAR (38)  , TT VARCHAR (5)  ,TEL1 VARCHAR (15)  , TEL2 VARCHAR (15)  , SIRA 
INTEGER , 
MONADES FLOAT , LYKIO VARCHAR (60)  , ETOSAPOF INTEGER , APOLYTIRIO VARCHAR (8)  , STUSTATUS VARCHAR (2)  , ETOSDIPL SMALLINT , SXOLIA VARCHAR (200)  ,
MH_YPOXR_GL VARCHAR (1)  ,
 EPVN_OLD VARCHAR (60)  , AROFEIL INTEGER , COD_LOCKER VARCHAR (5)  , DRESS_ROOM VARCHAR (20), ST_FROWID CHAR (40)  ) PCTFREE 10;

11.;
Create Table KART_WEB ( MODIF_TYPE VARCHAR (1)  , DATE_MODIF TIMESTAMP , USERNAME VARCHAR (10), KAR_SEQNO INTEGER , K_TM INTEGER , K_F VARCHAR (8)  
, EJ VARCHAR (2)  ,
 K_M INTEGER , TYPOS VARCHAR (2)  , GRADENOR INTEGER , OMADA VARCHAR (4)  , YPEROMA VARCHAR (4)  , AK INTEGER , GRADEPAN INTEGER , XU VARCHAR (1)  , 
VELTIOSI VARCHAR (1)  , 
EPEP VARCHAR (1)  , EJANIKI VARCHAR (2)  , GRADEXARI INTEGER ,  KARTROWID CHAR (40)   ) PCTFREE 10;

&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;
&&&&&&&&&&&&&&&&&& CREATE INDEXES FOR TBLS ISTORIKOY &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;

1; ST_F_IST;
CREATE INDEX ST_F_IST_IDX ON ST_F_IST (K_F, K_TM );
CREATE INDEX ST_F_IST_USD_IDX ON ST_F_IST (USERNAME, DATE_MODIF, MODIF_TYPE );

2; HST_F_IST;
CREATE INDEX HST_F_IST_IDX ON HST_F_IST (K_F, K_TM );
CREATE INDEX HST_F_IST_USD_IDX ON HST_F_IST (USERNAME, DATE_MODIF, MODIF_TYPE );

3; KARTELLA_IST;
CREATE INDEX KARTELLA_IST_IDX ON KARTELLA_IST (K_F, K_M, AK, XU );
CREATE INDEX KARTL_IST_USD_IDX ON KARTELLA_IST (USERNAME, DATE_MODIF, MODIF_TYPE );

4; HKARTELLA_IST;
CREATE INDEX HKARTELLA_IST_IDX ON HKARTELLA_IST (K_F, K_M );
CREATE INDEX HKARTL_IST_USD_IDX ON HKARTELLA_IST (USERNAME, DATE_MODIF, MODIF_TYPE );

5; DIPLGRADE_IST;
CREATE INDEX DIPLG_IST_IDX ON DIPLGRADE_IST (CODESYN );
CREATE INDEX DIPLG_IST_USD_IDX ON DIPLGRADE_IST (USERNAME, DATE_MODIF, MODIF_TYPE );

6; ANATHESI_IST;
CREATE INDEX ANATH_IST_IDX ON ANATHESI_IST (CODESYN );
CREATE INDEX ANATH_IST_USD_IDX ON ANATHESI_IST (USERNAME, DATE_MODIF, MODIF_TYPE );



@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;
@@@@ ARXIKA INSERTS TVN  DEDOMENVN STOYS PINAKES TVN ISTORIKVN STOIXEIVN @@@@@;
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;

1.;
INSERT INTO ST_F_IST  (
     K_F,K_TM,AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,KAT,
     STATUS,AK,XU,H_EGR,EJ,TROPOS,SXOLH,PRAXH,COORIG,NOMOSORIG,
     POLIORIG , BIRTHDATE,NOMOSMHTR,POLIMHTR, DIMOSKINOT, DIMOTOLOGIO,COKAT,NOMOSKAT,POLIKAT,PERIOXI,
     ODOS,TT,TEL1, TEL2,SIRA,MONADES,LYKIO,ETOSAPOF,APOLYTIRIO,STUSTATUS,
     ETOSDIPL ,SXOLIA , MH_YPOXR_GL , EPVN_OLD, ST_F_SEQNO , AROFEIL  , COD_LOCKER , DRESS_ROOM, MODIF_TYPE,DATE_MODIF, 
     ST_FROWID, USERNAME )
SELECT 
    K_F,K_TM,AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,KAT,
     STATUS,AK,XU,H_EGR,EJ, TROPOS,SXOLH,PRAXH,COORIG,NOMOSORIG,
     POLIORIG,BIRTHDATE,NOMOSMHTR,POLIMHTR,DIMOSKINOT,DIMOTOLOGIO,COKAT,NOMOSKAT,POLIKAT,PERIOXI,
     ODOS,TT,TEL1,TEL2,SIRA,MONADES,LYKIO,ETOSAPOF,APOLYTIRIO,STUSTATUS,
     ETOSDIPL, SXOLIA , MH_YPOXR_GL , EPVN_OLD, ST_F_SEQNO, AROFEIL  , COD_LOCKER , DRESS_ROOM, 'i',SYSDATETIME, 
     ROWID, USER 
FROM ST_F; 
SELECT SEQNO FROM ST_F;
2.;

INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 2008 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 2006 and ak < 2008 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 2004 and ak < 2006 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 2002 and ak < 2004 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 2000 and ak < 2002 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 1998 and ak < 2000 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 1996 and ak < 1998 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 1994 and ak < 1996 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 1992 and ak < 1994 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 1990 and ak < 1992 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 1988 and ak < 1990 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 1986 and ak < 1988 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 1984 and ak < 1986 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 1982 and ak < 1984 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak>= 1980 and ak < 1982 ;
INSERT INTO KARTELLA_IST (
     MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID )
SELECT
     'i', USER, SYSDATETIME, K_TM , K_F , EJ , K_M, TYPOS, GRADENOR, OMADA, YPEROMA ,AK ,
     GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, ROWID
FROM KARTELLA where ak<1980 ;


3.;
INSERT INTO HST_F_IST 
                        ( K_F,K_TM,AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,KAT,
                     	STATUS,AK,XU,H_EGR,EJ,TROPOS,SXOLH,PRAXH,COORIG,NOMOSORIG,
                     	POLIORIG,BIRTHDATE,NOMOSMHTR,POLIMHTR,DIMOSKINOT,DIMOTOLOGIO ,COKAT,NOMOSKAT,POLIKAT,PERIOXI,                     	
                     	ODOS,TT,TEL1,TEL2,SIRA,MONADES,LYKIO,ETOSAPOF,APOLYTIRIO,STUSTATUS,                     	
                     	ETOSDIPL,DATEEJET,MOANA,TITLOSMAU,ARDIPL, GRADEAPOF,PERIOD, LSTEXT, SIRAEPIT,
	       	        ETOSAPOFPOL, GRADENEW,EPVN_OLD, THEMA, MODIF_TYPE,DATE_MODIF,USERNAME )
SELECT 
		         K_F,K_TM,AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,KAT,
                     	STATUS,AK,XU,H_EGR,EJ,TROPOS,SXOLH,PRAXH,COORIG,NOMOSORIG,
                     	POLIORIG,BIRTHDATE,NOMOSMHTR,POLIMHTR,DIMOSKINOT,DIMOTOLOGIO ,COKAT,NOMOSKAT,POLIKAT,PERIOXI,                     	
                     	ODOS,TT,TEL1,TEL2,SIRA,MONADES,LYKIO,ETOSAPOF,APOLYTIRIO,STUSTATUS,                     	
                     	ETOSDIPL,DATEEJET,MOANA,TITLOSMAU,ARDIPL, GRADEAPOF,PERIOD, LSTEXT, SIRAEPIT,
	       	        ETOSAPOFPOL, GRADENEW,EPVN_OLD, THEMA, 'i' ,SYSDATETIME, USER  
FROM HST_F ;
4.;
INSERT INTO HKARTELLA_IST  ( 
			MODIF_TYPE,DATE_MODIF, USERNAME,  K_TM , K_F , EJ , K_M, TITLOS, GRADE, AK, XU, TYPOSMA ) 
SELECT
       			'i' , SYSDATETIME , USER, K_TM , K_F , EJ , K_M, TITLOS, GRADE, AK, XU, TYPOSMA
FROM HKARTELLA;
5.;
INSERT INTO ANATHESI_IST  ( 
			                MODIF_TYPE,DATE_MODIF, USERNAME,  CODESYN, AKANA, XUANA, DATEANATH, DATEANAMAU,AKAPOF, 
                                        AKEJET, PERIOD, DATEEJET,MOANA,TITLOSMAU,PERAIT,P_AK_EJET,THEMA )
                                SELECT 
               			         'i' , SYSDATETIME , USER,  CODESYN, AKANA, XUANA, DATEANATH, DATEANAMAU,AKAPOF, 
                                        AKEJET, PERIOD, DATEEJET,MOANA,TITLOSMAU,PERAIT,P_AK_EJET,THEMA 
                                FROM ANATHESI;
6.;
INSERT INTO DIPLGRADE_IST  (
			 MODIF_TYPE, DATE_MODIF, USERNAME, CODESYN, AM_DEP, TYPEDEP, GRADE ) 
		SELECT	
			'i' , SYSDATETIME , USER,  CODESYN, AM_DEP, TYPEDEP, GRADE 
                FROM DIPLGRADE;


&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;
@@@@ PROCEDURES FOR ISTORIKO AND WEB TRIGGERS  @@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&;
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;

ALTER TABLE ST_F_WEB ADD USERNAME VARCHAR(50);
ALTER TABLE ST_F_WEB ADD DRESS_ROOM VARCHAR(20);
ALTER TABLE ST_F_WEB ADD COD_LOCKER VARCHAR(5);
ALTER TABLE ST_F_WEB ADD AROFEIL INTEGER;
ALTER TABLE ST_F_WEB ADD EPVN_OLD VARCHAR(60);
ALTER TABLE ST_F_WEB ADD MH_YPOXR_GL VARCHAR(1);
ALTER TABLE ST_F_WEB ADD SXOLIA VARCHAR(200);
ALTER TABLE ST_F_WEB ADD DIMOSKINOT INTEGER;



1. ST_F;
=============================;
STORE  ST_F_PROC
PROCEDURE: ST_F_PROC STATIC
 PARAMETERS
   String    : sK_F
   Number : nK_TM
   String    : sAR_T
   String    : sEPVN
   String    : sONOMA
   String    : sPATR
   String    : sMHTR
   String    : sSEX
   String    : sYPHK
   String    : sKAT
   String    : sSTATUS
   Number : nAK
   String    : sXU
   Date/Time : dH_EGR
   String    : sEJ
   String    : sTROPOS
   String    : sSXOLH
   String    : sPRAXH
   String    : sCOORIG
   String    : sNOMOSORIG
   String    : sPOLIORIG
   Date/Time : dBIRTHDATE
   String    : sNOMOSMHTR
   String    : sPOLIMHTR
   Number    : nDIMOSKINOT
   String    : sDIMOTOLOGIO
   String    : sCOKAT
   String    : sNOMOSKAT
   String    : sPOLIKAT
   String    : sPERIOXI
   String    : sODOS
   String    : sTT
   String    : sTEL1
   String    : sTEL2
   Number : nSIRA
   Number : nMONADES
   String    : sLYKIO
   Number : nETOSAPOF
   String    : sAPOLYTIRIO
   String    : sSTUSTATUS
   Number : nETOSDIPL
   String    : sSXOLIA
   String    : sMH_YPOXR_GL
   String    : sEPVN_OLD
   Number : nST_F_SEQNO 
   Number : nAROFEIL
   String    : sCOD_LOCKER 
   String    : sDRESS_ROOM
   String    : Mod_Type
   String    : sK_ROWID
 LOCAL VARIABLES
   SQL HANDLE: hSql1
   SQL HANDLE: hSql2
 ACTIONS
   On Procedure Startup
    Call SqlConnect( hSql1 )
    Call SqlConnect( hSql2 )
   On Procedure Execute
    Call SqlPrepare( hSql1 , 'INSERT INTO ST_F_WEB(
     K_F,K_TM,AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,KAT,
     STATUS,AK,XU,H_EGR,EJ, TROPOS,SXOLH,PRAXH,COORIG,NOMOSORIG,
     POLIORIG,BIRTHDATE,NOMOSMHTR,POLIMHTR,DIMOSKINOT,DIMOTOLOGIO,COKAT,NOMOSKAT,POLIKAT,PERIOXI,
     ODOS,TT,TEL1,TEL2,SIRA,MONADES,LYKIO,ETOSAPOF,APOLYTIRIO,STUSTATUS,
     ETOSDIPL, SXOLIA , MH_YPOXR_GL , EPVN_OLD, ST_F_SEQNO, AROFEIL  , COD_LOCKER , DRESS_ROOM, MODIF_TYPE,DATE_MODIF, 
     ST_FROWID, USERNAME  )
     VALUES(
     :sK_F,:nK_TM,:sAR_T,:sEPVN,:sONOMA,:sPATR,:sMHTR,:sSEX,:sYPHK,:sKAT,
     :sSTATUS,:nAK,:sXU,:dH_EGR,:sEJ,:sTROPOS,:sSXOLH,:sPRAXH,:sCOORIG,:sNOMOSORIG,
     :sPOLIORIG,:dBIRTHDATE,:sNOMOSMHTR,:sPOLIMHTR, :nDIMOSKINOT, :sDIMOTOLOGIO,:sCOKAT,:sNOMOSKAT,:sPOLIKAT,:sPERIOXI,
     :sODOS,:sTT,:sTEL1,:sTEL2,:nSIRA,:nMONADES,:sLYKIO,:nETOSAPOF,:sAPOLYTIRIO,:sSTUSTATUS,
     :nETOSDIPL, :sSXOLIA , :sMH_YPOXR_GL , :sEPVN_OLD, :nST_F_SEQNO, :nAROFEIL  , :sCOD_LOCKER , :sDRESS_ROOM, :Mod_Type, SYSDATETIME, 
     :sK_ROWID, USER )' )

    Call SqlPrepare( hSql2 , 'INSERT INTO ST_F_IST(
     K_F,K_TM,AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,KAT,
     STATUS,AK,XU,H_EGR,EJ,TROPOS,SXOLH,PRAXH,COORIG,NOMOSORIG,
     POLIORIG , BIRTHDATE,NOMOSMHTR,POLIMHTR, DIMOSKINOT, DIMOTOLOGIO,COKAT,NOMOSKAT,POLIKAT,PERIOXI,
     ODOS,TT,TEL1, TEL2,SIRA,MONADES,LYKIO,ETOSAPOF,APOLYTIRIO,STUSTATUS,
     ETOSDIPL ,SXOLIA , MH_YPOXR_GL , EPVN_OLD, ST_F_SEQNO , AROFEIL  , COD_LOCKER , DRESS_ROOM, MODIF_TYPE,DATE_MODIF, 
     ST_FROWID, USERNAME )
     VALUES(
     :sK_F,:nK_TM,:sAR_T,:sEPVN,:sONOMA,:sPATR,:sMHTR,:sSEX,:sYPHK,:sKAT,
     :sSTATUS,:nAK,:sXU,:dH_EGR,:sEJ,:sTROPOS,:sSXOLH,:sPRAXH,:sCOORIG,:sNOMOSORIG,
     :sPOLIORIG,:dBIRTHDATE,:sNOMOSMHTR,:sPOLIMHTR, :nDIMOSKINOT, :sDIMOTOLOGIO,:sCOKAT,:sNOMOSKAT,:sPOLIKAT,:sPERIOXI,
     :sODOS,:sTT,:sTEL1,:sTEL2,:nSIRA,:nMONADES,:sLYKIO,:nETOSAPOF,:sAPOLYTIRIO,:sSTUSTATUS,
     :nETOSDIPL, :sSXOLIA , :sMH_YPOXR_GL , :sEPVN_OLD, :nST_F_SEQNO , :nAROFEIL  , :sCOD_LOCKER , :sDRESS_ROOM, :Mod_Type,SYSDATETIME, 
     :sK_ROWID, USER )' )
    Call SqlExecute( hSql1 )
    Call SqlExecute( hSql2 )
   On Procedure Close
    Call SqlDisconnect( hSql1 )
    Call SqlDisconnect( hSql2 );

2. KARTELLA;
=============================;

STORE KART_PROC
  PROCEDURE: KART_PROC STATIC
  PARAMETERS
      Number : nK_TM
      String : sK_F
      String : sEJ
      Number : nK_M
      String : sTYPOS
      Number :nGRADENOR
      String : sOMADA
      String : sYPEROMA
      Number : nAK
      Number : nGRADEPAN
      String : sXU
      String : sVELTIOSI
      String : sEPEP
      String : sEJANIKI
      Number : nGRADEXARI
      Number : nSEQNO
      String : sK_ROWID
      String : Mod_Type
  LOCAL VARIABLES
    SQL HANDLE: hSql1
    SQL HANDLE: hSql2
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql1 )
      Call SqlConnect( hSql2 )
    On Procedure Execute      
      Call SqlPrepare( hSql1 , 'INSERT INTO KART_WEB  ( 
			MODIF_TYPE,DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS,
                            	GRADENOR, OMADA, YPEROMA ,AK ,
                                	GRADEPAN,XU , VELTIOSI ,
                                	EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID  ) 
		VALUES(
			:Mod_Type , SYSDATETIME , :nK_TM , :sK_F , :sEJ , :nK_M , :sTYPOS , 
			:nGRADENOR , :sOMADA , :sYPEROMA , :nAK ,
       			:nGRADEPAN , :sXU ,  :sVELTIOSI , :sEPEP , :sEJANIKI , :nGRADEXARI, :nSEQNO, :sK_ROWID  ) ' )

      Call SqlPrepare( hSql2 , 'INSERT INTO KARTELLA_IST  ( 
			MODIF_TYPE,USERNAME, DATE_MODIF,K_TM , K_F , EJ , K_M, TYPOS,
                                	GRADENOR, OMADA, YPEROMA ,AK ,
                                	GRADEPAN,XU , VELTIOSI , EPEP , EJANIKI , GRADEXARI, KAR_SEQNO, KARTROWID  ) 
		VALUES(
       			:Mod_Type , USER, SYSDATETIME , :nK_TM , :sK_F , :sEJ , :nK_M , :sTYPOS ,
			:nGRADENOR , :sOMADA , :sYPEROMA , :nAK ,
       			:nGRADEPAN , :sXU ,  :sVELTIOSI , :sEPEP , :sEJANIKI , :nGRADEXARI, :nSEQNO, :sK_ROWID  ) ' )
      Call SqlExecute( hSql1 )
      Call SqlExecute( hSql2 )
    On Procedure Close
      Call SqlDisconnect( hSql1 )
      Call SqlDisconnect( hSql2 );


3. HST_F;
=============================;

 STORE HST_F_PROC
  PROCEDURE: HST_F_PROC STATIC
  PARAMETERS
      String : sK_F
      Number : nK_TM
      String : Mod_Type
  LOCAL VARIABLES
    SQL HANDLE: hSql
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql )
    On Procedure Execute      
      Call SqlPrepare( hSql , 'INSERT INTO HST_F_IST 
                        ( K_F,K_TM,AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,KAT,
                     	STATUS,AK,XU,H_EGR,EJ,TROPOS,SXOLH,PRAXH,COORIG,NOMOSORIG,
                     	POLIORIG,BIRTHDATE,NOMOSMHTR,POLIMHTR,DIMOSKINOT,DIMOTOLOGIO ,COKAT,NOMOSKAT,POLIKAT,PERIOXI,                     	
                     	ODOS,TT,TEL1,TEL2,SIRA,MONADES,LYKIO,ETOSAPOF,APOLYTIRIO,STUSTATUS,                     	
                     	ETOSDIPL,DATEEJET,MOANA,TITLOSMAU,ARDIPL, GRADEAPOF,PERIOD, LSTEXT, SIRAEPIT,
	       	        ETOSAPOFPOL, GRADENEW,EPVN_OLD, THEMA, MODIF_TYPE,DATE_MODIF,USERNAME )
                        SELECT 
		        :sK_F, :nK_TM, AR_T, EPVN,ONOMA,PATR,MHTR,SEX,YPHK,KAT,
                     	STATUS,AK,XU,H_EGR,EJ,TROPOS,SXOLH,PRAXH,COORIG,NOMOSORIG,
                     	POLIORIG,BIRTHDATE,NOMOSMHTR,POLIMHTR,DIMOSKINOT,DIMOTOLOGIO ,COKAT,NOMOSKAT,POLIKAT,PERIOXI,                     	
                     	ODOS,TT,TEL1,TEL2,SIRA,MONADES,LYKIO,ETOSAPOF,APOLYTIRIO,STUSTATUS,                     	
                     	ETOSDIPL,DATEEJET,MOANA,TITLOSMAU,ARDIPL, GRADEAPOF,PERIOD, LSTEXT, SIRAEPIT,
	       	        ETOSAPOFPOL, GRADENEW,EPVN_OLD, THEMA, :Mod_Type,SYSDATETIME,USER  
                        FROM HST_F WHERE K_F = :sK_F AND K_TM = :nK_TM ' )
      Call SqlExecute( hSql )
    On Procedure Close
      Call SqlDisconnect( hSql );

4. HKARTELLA;
=============================;

STORE HKART_PROC
  PROCEDURE: HKART_PROC STATIC
  PARAMETERS
      Number : nK_TM
      String : sK_F
      String : sEJ
      Number : nK_M
      String : sTITLOS
      Number :nGRADE
      Number : nAK
      String : sXU
      String :sTYPOSMA
      String : Mod_Type
  LOCAL VARIABLES
    SQL HANDLE: hSql

  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql ) 
    On Procedure Execute      
      Call SqlPrepare( hSql , 'INSERT INTO HKARTELLA_IST  ( 
			MODIF_TYPE,DATE_MODIF, USERNAME,  K_TM , K_F , EJ , K_M, TITLOS, GRADE, AK, XU, TYPOSMA ) 
		VALUES(
       			:Mod_Type , SYSDATETIME , USER,  :nK_TM , :sK_F , :sEJ , :nK_M , :sTITLOS , :nGRADE , :nAK , :sXU, :sTYPOSMA   ) ' )
      Call SqlExecute( hSql )  
    On Procedure Close
      Call SqlDisconnect( hSql ) ;

5. ANATHESI;
=============================;

STORE ANATHESI_PROC
  PROCEDURE: ANATHESI_PROC STATIC
  PARAMETERS
      Number : nCODESYN
      String : Mod_Type
  LOCAL VARIABLES
    SQL HANDLE: hSql
  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql ) 
      Call SqlPrepare( hSql , 'INSERT INTO ANATHESI_IST  ( 
			                MODIF_TYPE,DATE_MODIF, USERNAME,  CODESYN, AKANA, XUANA, DATEANATH, DATEANAMAU,AKAPOF, 
                                        AKEJET, PERIOD, DATEEJET,MOANA,TITLOSMAU,PERAIT,P_AK_EJET,THEMA )
                                SELECT 
               			         :Mod_Type , SYSDATETIME , USER,  :nCODESYN, AKANA, XUANA, DATEANATH, DATEANAMAU,AKAPOF, 
                                	AKEJET, PERIOD, DATEEJET,MOANA,TITLOSMAU,PERAIT,P_AK_EJET,THEMA 
                                FROM ANATHESI WHERE CODESYN = :nCODESYN ' )
    On Procedure Execute 
      Call SqlExecute( hSql )  
    On Procedure Close
      Call SqlDisconnect( hSql ) ;


6. DIPLGRADE;
=============================;

STORE DIPLGR_PROC
  PROCEDURE: DIPLGR_PROC STATIC
  PARAMETERS
      Number : nCODESYN
      Number : nAM_DEP  
      String : sTYPEDEP
      Number : nGRADE
      Number : nAA
      String : Mod_Type
  LOCAL VARIABLES
    SQL HANDLE: hSql

  ACTIONS
    On Procedure Startup
      Call SqlConnect( hSql ) 
    On Procedure Execute      
      Call SqlPrepare( hSql , 'INSERT INTO DIPLGRADE_IST  (
			 MODIF_TYPE, DATE_MODIF, USERNAME, CODESYN, AM_DEP, TYPEDEP, GRADE, AA ) 
		VALUES(	
			:Mod_Type , SYSDATETIME , USER,  :nCODESYN, :nAM_DEP, :sTYPEDEP, :nGRADE, :nAA ) ' )
      Call SqlExecute( hSql )  
    On Procedure Close
      Call SqlDisconnect( hSql ) ;



&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;
&&&&&&&&&&&&  CREATE TRIGGERS FOR ISTORIKO AND WEB &&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&;




%%%%%%%%%%%%%%%%%%%%%%  ST_F  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
DROP TRIGGER ST_F_DEL;
1;  
 CREATE TRIGGER SYSADM.ST_F_DEL BEFORE DELETE ON ST_F
  ( EXECUTE ST_F_PROC (
	ST_F.K_F, ST_F.K_TM, ST_F.AR_T, ST_F.EPVN, ST_F.ONOMA, ST_F.PATR, ST_F.MHTR, ST_F.SEX , ST_F.YPHK, ST_F.KAT , 
              ST_F.STATUS , ST_F.AK , ST_F.XU , ST_F.H_EGR , ST_F.EJ ,ST_F.TROPOS, ST_F.SXOLH, ST_F.PRAXH , ST_F.COORIG , ST_F.NOMOSORIG , 
	ST_F.POLIORIG, ST_F.BIRTHDATE, ST_F.NOMOSMHTR, ST_F.POLIMHTR, ST_F.DIMOSKINOT, ST_F.DIMOTOLOGIO,ST_F.COKAT, ST_F.NOMOSKAT,ST_F.POLIKAT ,ST_F.PERIOXI , 
              ST_F.ODOS, ST_F.TT, ST_F.TEL1,ST_F.TEL2 , ST_F.SIRA , ST_F.MONADES , ST_F.LYKIO , ST_F.ETOSAPOF , ST_F.APOLYTIRIO, ST_F.STUSTATUS,                      
              ST_F.ETOSDIPL, ST_F.SXOLIA , ST_F.MH_YPOXR_GL, ST_F.EPVN_OLD, ST_F.ST_F_SEQNO, ST_F.AROFEIL, ST_F.COD_LOCKER, ST_F.DRESS_ROOM, 'd' , ST_F.ROWID
)   ) 	       	     
  FOR EACH ROW;


DROP TRIGGER ST_F_INS; 
2.; 
 CREATE TRIGGER SYSADM.ST_F_INS AFTER INSERT ON ST_F
  ( EXECUTE ST_F_PROC (
	ST_F.K_F,ST_F.K_TM, ST_F.AR_T, ST_F.EPVN, ST_F.ONOMA, ST_F.PATR, ST_F.MHTR,ST_F.SEX , ST_F.YPHK, ST_F.KAT , 
              ST_F.STATUS , ST_F.AK , ST_F.XU , ST_F.H_EGR , ST_F.EJ, ST_F.TROPOS, ST_F.SXOLH, ST_F.PRAXH , ST_F.COORIG , ST_F.NOMOSORIG , 
	ST_F.POLIORIG, ST_F.BIRTHDATE , ST_F.NOMOSMHTR , ST_F.POLIMHTR , DIMOSKINOT, ST_F.DIMOTOLOGIO,ST_F.COKAT , ST_F.NOMOSKAT , ST_F.POLIKAT ,ST_F.PERIOXI ,  
              ST_F.ODOS, ST_F.TT, ST_F.TEL1, ST_F.TEL2 , ST_F.SIRA , ST_F.MONADES , ST_F.LYKIO , ST_F.ETOSAPOF , ST_F.APOLYTIRIO,ST_F.STUSTATUS, 
              ST_F.ETOSDIPL,SXOLIA , MH_YPOXR_GL , EPVN_OLD, ST_F_SEQNO , AROFEIL  , COD_LOCKER , DRESS_ROOM, 'i'   , ST_F.ROWID
)    )
FOR EACH ROW;

DROP TRIGGER ST_F_UPDT;

3.; 
 CREATE TRIGGER SYSADM.ST_F_UPDT AFTER UPDATE ON ST_F
REFERENCING OLD AS OLD_EMP NEW AS NEW_EMP
  ( EXECUTE ST_F_PROC (
	ST_F.K_F,ST_F.K_TM, ST_F.AR_T, ST_F.EPVN, ST_F.ONOMA, ST_F.PATR, ST_F.MHTR,ST_F.SEX , ST_F.YPHK, ST_F.KAT , 
              ST_F.STATUS , ST_F.AK , ST_F.XU , ST_F.H_EGR , ST_F.EJ,ST_F.TROPOS, ST_F.SXOLH, ST_F.PRAXH , ST_F.COORIG , ST_F.NOMOSORIG , 
	ST_F.POLIORIG, ST_F.BIRTHDATE , ST_F.NOMOSMHTR , ST_F.POLIMHTR , DIMOSKINOT, ST_F.DIMOTOLOGIO,ST_F.COKAT , ST_F.NOMOSKAT , ST_F.POLIKAT , ST_F.PERIOXI , 
              ST_F.ODOS, ST_F.TT, ST_F.TEL1,ST_F.TEL2 , ST_F.SIRA , ST_F.MONADES , ST_F.LYKIO , ST_F.ETOSAPOF , ST_F.APOLYTIRIO,ST_F.STUSTATUS,                      
              ST_F.ETOSDIPL ,SXOLIA , MH_YPOXR_GL , EPVN_OLD, ST_F_SEQNO , AROFEIL  , COD_LOCKER , DRESS_ROOM, 'u' , ST_F.ROWID
)    )
FOR EACH ROW;



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%  KARTELLA  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;


DROP TRIGGER KART_INS ;
 4.; 
 CREATE TRIGGER SYSADM.KART_INS AFTER INSERT ON KARTELLA
  ( EXECUTE KART_PROC (
	KARTELLA.K_TM , KARTELLA.K_F , KARTELLA.EJ , KARTELLA.K_M, KARTELLA.TYPOS,
              KARTELLA.GRADENOR, KARTELLA.OMADA, KARTELLA.YPEROMA ,KARTELLA.AK ,
              KARTELLA.GRADEPAN,KARTELLA.XU ,  KARTELLA.VELTIOSI ,
              KARTELLA.EPEP , KARTELLA.EJANIKI , KARTELLA.GRADEXARI, KARTELLA.KAR_SEQNO, KARTELLA.ROWID, 'i'  
)  )
FOR EACH ROW;

DROP TRIGGER KART_UPDT ;
5.;
 CREATE TRIGGER SYSADM.KART_UPDT  AFTER UPDATE ON KARTELLA
REFERENCING OLD AS OLD_KARTELLA NEW AS NEW_KARTELLA
  ( EXECUTE  KART_PROC (
	NEW_KARTELLA.K_TM , NEW_KARTELLA.K_F , NEW_KARTELLA.EJ , NEW_KARTELLA.K_M,NEW_KARTELLA.TYPOS, 
              NEW_KARTELLA.GRADENOR, NEW_KARTELLA.OMADA,NEW_KARTELLA.YPEROMA , NEW_KARTELLA.AK , 
              NEW_KARTELLA.GRADEPAN,NEW_KARTELLA.XU ,  NEW_KARTELLA.VELTIOSI , 
              NEW_KARTELLA.EPEP, NEW_KARTELLA.EJANIKI , NEW_KARTELLA.GRADEXARI ,NEW_KARTELLA.KAR_SEQNO, NEW_KARTELLA.ROWID, 'u'
)   )
FOR EACH ROW;

DROP TRIGGER KART_DEL ;
6.;
 CREATE TRIGGER SYSADM.KART_DEL  BEFORE  DELETE  ON KARTELLA
  ( EXECUTE KART_PROC (
	KARTELLA.K_TM , KARTELLA.K_F , KARTELLA.EJ , KARTELLA.K_M, KARTELLA.TYPOS,
              KARTELLA.GRADENOR, KARTELLA.OMADA, KARTELLA.YPEROMA ,KARTELLA.AK ,
              KARTELLA.GRADEPAN,KARTELLA.XU , KARTELLA.VELTIOSI ,
              KARTELLA.EPEP , KARTELLA.EJANIKI , KARTELLA.GRADEXARI , KARTELLA.KAR_SEQNO, KARTELLA.ROWID, 'd')
   )
FOR EACH ROW;


%%%%%%%%%%%%%%%%%%%%  HST_F  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

7.;
CREATE TRIGGER SYSADM.HST_F_DEL  BEFORE DELETE ON HST_F
  ( EXECUTE HST_F_PROC ( K_F, K_TM, 'd' )  ) FOR EACH ROW;

8.;
 CREATE TRIGGER SYSADM.HST_F_INS AFTER INSERT ON HST_F
  ( EXECUTE HST_F_PROC ( K_F, K_TM, 'i' )   ) FOR EACH ROW;

9.;
 CREATE TRIGGER SYSADM.HST_F_UPDT AFTER UPDATE ON HST_F
REFERENCING OLD AS OLD_EMP NEW AS NEW_EMP
    ( EXECUTE HST_F_PROC ( K_F, K_TM, 'u' )   ) FOR EACH ROW;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%  HKARTELLA  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;


 10.; 
 CREATE TRIGGER SYSADM.HKART_INS AFTER INSERT ON HKARTELLA
  ( EXECUTE HKART_PROC (
	HKARTELLA.K_TM , HKARTELLA.K_F , HKARTELLA.EJ , HKARTELLA.K_M, HKARTELLA.TITLOS,
              HKARTELLA.GRADE, HKARTELLA.AK, HKARTELLA.XU, HKARTELLA.TYPOSMA, 'i' 
 )  )
FOR EACH ROW;

11.;
 CREATE TRIGGER SYSADM.HKART_UPDT  AFTER UPDATE ON HKARTELLA
REFERENCING OLD AS OLD_HKARTELLA NEW AS NEW_HKARTELLA
  ( EXECUTE  HKART_PROC (
	NEW_HKARTELLA.K_TM , NEW_HKARTELLA.K_F , NEW_HKARTELLA.EJ , NEW_HKARTELLA.K_M,NEW_HKARTELLA.TITLOS, 
              NEW_HKARTELLA.GRADE, NEW_HKARTELLA.AK, NEW_HKARTELLA.XU , NEW_HKARTELLA.TYPOSMA, 'u'
)   )
FOR EACH ROW;

12.;
 CREATE TRIGGER SYSADM.HKART_DEL  BEFORE  DELETE  ON HKARTELLA
  ( EXECUTE HKART_PROC (
	HKARTELLA.K_TM , HKARTELLA.K_F , HKARTELLA.EJ , HKARTELLA.K_M, HKARTELLA.TITLOS,
              HKARTELLA.GRADE, HKARTELLA.AK, HKARTELLA.XU, HKARTELLA.TYPOSMA, 'd'  
)   )
FOR EACH ROW;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%  ANATHESI  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

 13.; 
 CREATE TRIGGER SYSADM.ANATHESI_INS AFTER INSERT ON ANATHESI
  ( EXECUTE ANATHESI_PROC (
	ANATHESI.CODESYN, 'i' )   ) FOR EACH ROW;

14.;
 CREATE TRIGGER SYSADM.ANATHESI_UPDT  AFTER UPDATE ON  ANATHESI
REFERENCING OLD AS OLD_ANATHESI NEW AS NEW_ANATHESI
  ( EXECUTE   ANATHESI_PROC (
	NEW_ANATHESI.CODESYN ,'u'  )   ) FOR EACH ROW;

15.;
 CREATE TRIGGER SYSADM.ANATHESI_DEL  BEFORE  DELETE  ON  ANATHESI
  ( EXECUTE  ANATHESI_PROC (
	ANATHESI.CODESYN ,'d'  )   ) FOR EACH ROW;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;
%%%%%%%%%%%%%%%%%%%%%%  DIPLGRADE %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%;

 16.; 
 CREATE TRIGGER SYSADM.DIPLGR_INS AFTER INSERT ON DIPLGRADE
  ( EXECUTE DIPLGR_PROC 
		   ( CODESYN , AM_DEP,TYPEDEP,GRADE, AA, 'i'  )  
  )
FOR EACH ROW;

17.;
 CREATE TRIGGER SYSADM.DIPLGR_UPDT  AFTER UPDATE ON  DIPLGRADE
REFERENCING OLD AS OLD_DIPLGRADE NEW AS NEW_DIPLGRADE
  ( EXECUTE  DIPLGR_PROC
		   ( NEW_DIPLGRADE.CODESYN , NEW_DIPLGRADE.AM_DEP, NEW_DIPLGRADE.TYPEDEP, NEW_DIPLGRADE.GRADE , AA, 'u'  )  
   )
FOR EACH ROW;

18.;
 CREATE TRIGGER SYSADM.DIPLGR_DEL  BEFORE  DELETE  ON  DIPLGRADE
  ( EXECUTE  DIPLGR_PROC
		   ( CODESYN , AM_DEP, TYPEDEP, GRADE, AA, 'd'  )  
   )
FOR EACH ROW;


SELECT * FROM USERTAB ;



