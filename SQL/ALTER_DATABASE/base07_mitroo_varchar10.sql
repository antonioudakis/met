DROP TRIGGER MET_DEL;
DROP TRIGGER MET_INS;
DROP TRIGGER MET_UPDT;
DROP TRIGGER MET_INS_SN;

ALTER TABLE MET          MODIFY MITROO VARCHAR(10);
ALTER TABLE MET_IST   MODIFY MITROO VARCHAR(10);
ALTER TABLE MET_WEB MODIFY MITROO VARCHAR(10);

ALTER TABLE MET_IST ADD ERASMUS    VARCHAR(1);
ALTER TABLE MET_IST ADD DIPLEPVN    VARCHAR(40);
ALTER TABLE MET_IST ADD DIPLONOMA VARCHAR(30);
ALTER TABLE MET_IST ADD DIPLPATR    VARCHAR(30);

ALTER TABLE MET_WEB ADD ERASMUS    VARCHAR(1);
ALTER TABLE MET_WEB ADD DIPLEPVN    VARCHAR(40);
ALTER TABLE MET_WEB ADD DIPLONOMA VARCHAR(30);
ALTER TABLE MET_WEB ADD DIPLPATR    VARCHAR(30);

DROP INDEX MET_IDX;
ALTER TABLE MET DROP PRIMARY KEY;
CREATE UNIQUE INDEX MET_IDX ON MET (MITROO);
ALTER TABLE MET PRIMARY KEY (MITROO);

ERASE MET_PROC;

STORE  MET_PROC
PROCEDURE: MET_PROC STATIC
 	PARAMETERS
   		String   	 	: sMODIFTYPE
   		String    		: sMITROO
   		Number 		: nTMIMACODE
   		String    		: sAR_T
   		String    		: sEPVN
   		String    		: sONOMA
   		String    		: sPATR
   		String    		: sMHTR
   		String    		: sSEX
   		String    		: sYPHK
   		String    		: sXU
   		String    		: sCOORIG
   		String    		: sNOMOSORIG
  		String    		: sPOLIORIG
   		Date/Time 	: dBIRTHDATE
   		String    		: sNOMOSMHTR
   		String    		: sPOLIMHTR
   		Number		: nDIMOSKINOT
   		String	    	: sDIMOTOLOGIO
   		String 	   	: sCOKAT
   		String  	  	: sNOMOSKAT
   		String   	 	: sPOLIKAT
  		String   	 	: sPERIOXI
   		String   	 	: sODOS
   		String   	 	: sTT
   		String   	 	: sTEL1
   		String   	 	: sTEL2
   		String   	 	: sEMAIL
		String   	 	: sWORK
		String   	 	: sMHXANIK
		String   	 	: sOFEILES
		String   	 	: sDIPLEPVN
		String   	 	: sDIPLONOMA
		String   	 	: sDIPLPATR
		String   	 	: sPARAVOLO
		String   	 	: sUSRNAME
		String   	 	: sERASMUS
 	LOCAL VARIABLES
   		SQL HANDLE: hSql1
   		SQL HANDLE: hSql2
 	ACTIONS
   		On Procedure Startup
    			Call SqlConnect( hSql1 )
    			Call SqlConnect( hSql2 )
   		On Procedure Execute
			Call SqlPrepare( hSql1 , 'INSERT INTO MET_WEB(
										DATEMODIF, MODIFTYPE, MITROO, TMIMACODE, AR_T, EPVN, ONOMA, PATR, MHTR, SEX, YPHK, XU, COORIG, NOMOSORIG, 
										POLIORIG, BIRTHDATE, NOMOSMHTR, POLIMHTR, DIMOSKINOT, DIMOTOLOGIO, COKAT, NOMOSKAT, POLIKAT, PERIOXI, ODOS, TT, TEL1, 
										TEL2, EMAIL, WORK, MHXANIK, OFEILES, DIPLEPVN, DIPLONOMA, DIPLPATR, PARAVOLO, USRNAME, ERASMUS)
     							      	       VALUES(
										SYSDATETIME, :sMODIFTYPE, :sMITROO, :nTMIMACODE, :sAR_T, :sEPVN, :sONOMA, :sPATR, :sMHTR, :sSEX, :sYPHK, :sXU, :sCOORIG, :sNOMOSORIG,
										:sPOLIORIG, :dBIRTHDATE, :sNOMOSMHTR, :sPOLIMHTR,  :nDIMOSKINOT, :sDIMOTOLOGIO, :sCOKAT, :sNOMOSKAT, :sPOLIKAT, :sPERIOXI, :sODOS, :sTT, :sTEL1,
										:sTEL2, :sEMAIL,  :sWORK, :sMHXANIK, :sOFEILES, :sDIPLEPVN, :sDIPLONOMA, :sDIPLPATR, :sPARAVOLO, :sUSRNAME, :sERASMUS)' )
    			Call SqlExecute( hSql1 )
    			Call SqlPrepare( hSql2 , 'INSERT INTO MET_IST(
										USERNAME, DATEMODIF, MODIFTYPE, MITROO, TMIMACODE, AR_T, EPVN, ONOMA, PATR, MHTR, SEX, YPHK, XU, COORIG, NOMOSORIG, 
										 POLIORIG, BIRTHDATE, NOMOSMHTR, POLIMHTR, DIMOSKINOT, DIMOTOLOGIO, COKAT, NOMOSKAT, POLIKAT, PERIOXI, ODOS, TT, TEL1, 
										TEL2, EMAIL, WORK, MHXANIK,  OFEILES, DIPLEPVN, DIPLONOMA, DIPLPATR, PARAVOLO, USRNAME, ERASMUS)
     							               VALUES(
										USER, SYSDATETIME, :sMODIFTYPE, :sMITROO, :nTMIMACODE, :sAR_T, :sEPVN, :sONOMA, :sPATR, :sMHTR, :sSEX, :sYPHK, :sXU, :sCOORIG, :sNOMOSORIG,
										:sPOLIORIG, :dBIRTHDATE, :sNOMOSMHTR, :sPOLIMHTR, :nDIMOSKINOT, :sDIMOTOLOGIO, :sCOKAT, :sNOMOSKAT, :sPOLIKAT, :sPERIOXI, :sODOS, :sTT, :sTEL1,
										:sTEL2, :sEMAIL,  :sWORK, :sMHXANIK, :sOFEILES, :sDIPLEPVN, :sDIPLONOMA, :sDIPLPATR, :sPARAVOLO, :sUSRNAME, :sERASMUS)' )
    			Call SqlExecute( hSql2 )
   		On Procedure Close
    			Call SqlDisconnect( hSql1 )
    			Call SqlDisconnect( hSql2 );

CREATE TRIGGER SYSADM.MET_INS AFTER INSERT ON MET
	( EXECUTE MET_PROC (
				'i', MET.MITROO, MET.TMIMACODE, MET.AR_T, MET.EPVN, MET.ONOMA, MET.PATR, MET.MHTR, MET.SEX, MET.YPHK, MET.XU, MET.COORIG, MET.NOMOSORIG, 
				MET.POLIORIG, MET.BIRTHDATE, MET.NOMOSMHTR, MET.POLIMHTR, MET.DIMOSKINOT, MET.DIMOTOLOGIO, MET.COKAT, MET.NOMOSKAT, MET.POLIKAT, MET.PERIOXI, MET.ODOS, MET.TT, MET.TEL1, 
				MET.TEL2, MET.EMAIL, MET.WORK, MET.MHXANIK, MET.OFEILES,  MET.DIPLEPVN, MET.DIPLONOMA, MET.DIPLPATR, MET.PARAVOLO, MET.USRNAME, MET.ERASMUS) )
FOR EACH ROW;


CREATE TRIGGER SYSADM.MET_DEL AFTER DELETE ON MET
	( EXECUTE MET_PROC (
				'd', MET.MITROO, MET.TMIMACODE, MET.AR_T, MET.EPVN, MET.ONOMA, MET.PATR, MET.MHTR, MET.SEX, MET.YPHK, MET.XU, MET.COORIG, MET.NOMOSORIG, 
				MET.POLIORIG, MET.BIRTHDATE, MET.NOMOSMHTR, MET.POLIMHTR, MET.DIMOSKINOT, MET.DIMOTOLOGIO, MET.COKAT, MET.NOMOSKAT, MET.POLIKAT, MET.PERIOXI, MET.ODOS, MET.TT, MET.TEL1, 
				MET.TEL2, MET.EMAIL, MET.WORK, MET.MHXANIK, MET.OFEILES,  MET.DIPLEPVN, MET.DIPLONOMA, MET.DIPLPATR, MET.PARAVOLO, MET.USRNAME, MET.ERASMUS) )
FOR EACH ROW;


CREATE TRIGGER SYSADM.MET_UPDT AFTER UPDATE ON MET REFERENCING OLD AS OLD_MET NEW AS NEW_MET
  	( EXECUTE MET_PROC (
				'u', MET.MITROO, MET.TMIMACODE, MET.AR_T, MET.EPVN, MET.ONOMA, MET.PATR, MET.MHTR, MET.SEX, MET.YPHK, MET.XU, MET.COORIG, MET.NOMOSORIG, 
				MET.POLIORIG, MET.BIRTHDATE, MET.NOMOSMHTR, MET.POLIMHTR, MET.DIMOSKINOT, MET.DIMOTOLOGIO, MET.COKAT, MET.NOMOSKAT, MET.POLIKAT, MET.PERIOXI, MET.ODOS, MET.TT, MET.TEL1, 
				MET.TEL2, MET.EMAIL, MET.WORK, MET.MHXANIK, MET.OFEILES,  MET.DIPLEPVN, MET.DIPLONOMA, MET.DIPLPATR, MET.PARAVOLO, MET.USRNAME, MET.ERASMUS) )
FOR EACH ROW;


DROP TRIGGER METKARTL_DEL;
DROP TRIGGER METKARTL_INS;
DROP TRIGGER METKARTL_UPDT;
DROP TRIGGER METKARTL_INS_SN;

ALTER TABLE METKARTL          MODIFY MITROO VARCHAR(10);
ALTER TABLE METKARTL_IST   MODIFY MITROO VARCHAR(10);
ALTER TABLE METKARTL_WEB MODIFY MITROO VARCHAR(10);

ALTER TABLE METKARTL          MODIFY MITROO	NOT NULL;
ALTER TABLE METKARTL          MODIFY PROGCODE  NOT NULL;
ALTER TABLE METKARTL          MODIFY COURCODE 	NOT NULL;
ALTER TABLE METKARTL          MODIFY AK 		NOT NULL;
ALTER TABLE METKARTL          MODIFY PERIOD 	NOT NULL;

DROP INDEX METKARTL_IDX;
ALTER TABLE METKARTL DROP PRIMARY KEY;
CREATE UNIQUE INDEX METKARTL_IDX ON METKARTL (MITROO,COURCODE,AK,PERIOD,PROGCODE);
ALTER TABLE METKARTL PRIMARY KEY (MITROO,COURCODE,AK,PERIOD,PROGCODE);
ALTER TABLE METKARTL DROP FOREIGN KEY MET;
ALTER TABLE METKARTL FOREIGN KEY MET (MITROO) REFERENCES MET;


ERASE METKARTL_PROC;

STORE  METKARTL_PROC
PROCEDURE: METKARTL_PROC STATIC
 	PARAMETERS
   		String   	 	:sMODIFTYPE     
		String 		:sMITROO	 
		Number 		:nTMIMACODE
		Number 		:nPROGCODE
      		Number 		:nAK
      		String	 	:sPERIOD
      		Number 		:nCOURCODE
		String 		:sPERIODANIKI
		String 		:sTYPOS
      		Number 		:nGRADENOR
      		Number 		:nGRADEPAN
      		String 		:sAPALAG
		String 		:sEPEPIL
    		Date/Time 	:dDATEDEL
 	LOCAL VARIABLES
   		SQL HANDLE: hSql1
   		SQL HANDLE: hSql2
 	ACTIONS
   		On Procedure Startup
    			Call SqlConnect( hSql1 )
    			Call SqlConnect( hSql2 )
   		On Procedure Execute
			Call SqlPrepare( hSql1 , 'INSERT INTO METKARTL_WEB(
										DATEMODIF, MODIFTYPE, MITROO, TMIMACODE, PROGCODE,AK,PERIOD,COURCODE,PERIODANIKI,TYPOS,GRADENOR,GRADEPAN,APALAG,EPEPIL,DATEDEL)
     							      	       VALUES(
										SYSDATETIME, :sMODIFTYPE, :sMITROO, :nTMIMACODE, :nPROGCODE, :nAK, :sPERIOD, :nCOURCODE, :sPERIODANIKI, :sTYPOS, :nGRADENOR, :nGRADEPAN,:sAPALAG, :sEPEPIL, :dDATEDEL)' )
    			Call SqlExecute( hSql1 )
    			Call SqlPrepare( hSql2 , 'INSERT INTO METKARTL_IST(
										USERNAME, DATEMODIF, MODIFTYPE, MITROO, TMIMACODE, PROGCODE,AK,PERIOD,COURCODE,PERIODANIKI,TYPOS,GRADENOR,GRADEPAN,APALAG,EPEPIL,DATEDEL)
     							               VALUES(
										USER, SYSDATETIME, :sMODIFTYPE, :sMITROO, :nTMIMACODE, :nPROGCODE, :nAK, :sPERIOD, :nCOURCODE, :sPERIODANIKI, :sTYPOS, :nGRADENOR, :nGRADEPAN,:sAPALAG, :sEPEPIL, :dDATEDEL)' )
    			Call SqlExecute( hSql2 )
   		On Procedure Close
    			Call SqlDisconnect( hSql1 )
    			Call SqlDisconnect( hSql2 );

CREATE TRIGGER SYSADM.METKARTL_INS AFTER INSERT ON METKARTL
	( EXECUTE METKARTL_PROC (
				'i', METKARTL.MITROO, METKARTL.TMIMACODE, METKARTL.PROGCODE, METKARTL.AK, METKARTL.PERIOD, METKARTL.COURCODE, METKARTL.PERIODANIKI, METKARTL.TYPOS, METKARTL.GRADENOR, METKARTL.GRADEPAN, 
				METKARTL.APALAG, METKARTL.EPEPIL, METKARTL.DATEDEL) )
FOR EACH ROW;


CREATE TRIGGER SYSADM.METKARTL_DEL AFTER DELETE ON METKARTL
	( EXECUTE METKARTL_PROC (
				'd', METKARTL.MITROO, METKARTL.TMIMACODE, METKARTL.PROGCODE, METKARTL.AK, METKARTL.PERIOD, METKARTL.COURCODE, METKARTL.PERIODANIKI, METKARTL.TYPOS, METKARTL.GRADENOR, METKARTL.GRADEPAN, 
				METKARTL.APALAG, METKARTL.EPEPIL, METKARTL.DATEDEL) )
FOR EACH ROW;


CREATE TRIGGER SYSADM.METKARTL_UPDT AFTER UPDATE ON METKARTL REFERENCING OLD AS OLD_METKARTL NEW AS NEW_METKARTL
  	( EXECUTE METKARTL_PROC (
				'u', METKARTL.MITROO, METKARTL.TMIMACODE, METKARTL.PROGCODE, METKARTL.AK, METKARTL.PERIOD, METKARTL.COURCODE, METKARTL.PERIODANIKI, METKARTL.TYPOS, METKARTL.GRADENOR, METKARTL.GRADEPAN, 
				METKARTL.APALAG, METKARTL.EPEPIL, METKARTL.DATEDEL) )
FOR EACH ROW;


DROP TRIGGER METSTUPROG_DEL;
DROP TRIGGER METSTUPROG_INS;
DROP TRIGGER METSTUPROG_UPDT;
DROP TRIGGER METSTUPROG_INS_SN;

ALTER TABLE METSTUPROG          MODIFY MITROO VARCHAR(10);
ALTER TABLE METSTUPROG_IST   MODIFY MITROO VARCHAR(10);
ALTER TABLE METSTUPROG_WEB MODIFY MITROO VARCHAR(10);

ALTER TABLE METSTUPROG_IST   ADD PERIODDIPL VARCHAR(1);
ALTER TABLE METSTUPROG_IST   ADD DEPCODEINTEGER;
ALTER TABLE METSTUPROG_IST   ADD TOMCODE INTEGER;
ALTER TABLE METSTUPROG_IST   ADD ETOSDIPL INTEGER;
ALTER TABLE METSTUPROG_IST   ADD AK INTEGER;
ALTER TABLE METSTUPROG_IST   ADD DATEEDE VARCHAR(10);
ALTER TABLE METSTUPROG_IST   ADD ARDIPL VARCHAR(10);
ALTER TABLE METSTUPROG_IST   ADD PRAXH VARCHAR(10);
ALTER TABLE METSTUPROG_IST   ADD PM VARCHAR(1);
ALTER TABLE METSTUPROG_IST   ADD EJ VARCHAR(2);
ALTER TABLE METSTUPROG_IST   ADD KAT VARCHAR(2);
ALTER TABLE METSTUPROG_IST   ADD EKP_DIPL VARCHAR(1);
ALTER TABLE METSTUPROG_IST   ADD H_AIT DATE;
ALTER TABLE METSTUPROG_IST   ADD DATEANAGEST DATE;
ALTER TABLE METSTUPROG_IST   ADD DATETELANAGEST DATE;
ALTER TABLE METSTUPROG_IST   ADD H_EGR DATE;

ALTER TABLE METSTUPROG_WEB ADD PERIODDIPL VARCHAR(1);
ALTER TABLE METSTUPROG_WEB ADD DEPCODE INTEGER;
ALTER TABLE METSTUPROG_WEB ADD TOMCODE INTEGER;
ALTER TABLE METSTUPROG_WEB ADD ETOSDIPL INTEGER;
ALTER TABLE METSTUPROG_WEB ADD AK INTEGER;
ALTER TABLE METSTUPROG_WEB ADD DATEEDE VARCHAR(10);
ALTER TABLE METSTUPROG_WEB ADD ARDIPL VARCHAR(10);
ALTER TABLE METSTUPROG_WEB ADD PRAXH VARCHAR(10);
ALTER TABLE METSTUPROG_WEB ADD PM VARCHAR(1);
ALTER TABLE METSTUPROG_WEB ADD EJ VARCHAR(2);
ALTER TABLE METSTUPROG_WEB ADD KAT VARCHAR(2);
ALTER TABLE METSTUPROG_WEB ADD EKP_DIPL VARCHAR(1);
ALTER TABLE METSTUPROG_WEB ADD H_AIT DATE;
ALTER TABLE METSTUPROG_WEB ADD DATEANAGEST DATE;
ALTER TABLE METSTUPROG_WEB ADD DATETELANAGEST DATE;
ALTER TABLE METSTUPROG_WEB ADD H_EGR DATE;

ALTER TABLE METSTUPROG MODIFY MITROO NOT NULL;
ALTER TABLE METSTUPROG MODIFY PROGCODE NOT NULL;

DROP INDEX METSTUPROG_IDX;
ALTER TABLE METSTUPROG DROP PRIMARY KEY;
CREATE UNIQUE INDEX METSTUPROG_IDX ON METSTUPROG (MITROO,PROGCODE);
ALTER TABLE METSTUPROG PRIMARY KEY (MITROO,PROGCODE);
ALTER TABLE METSTUPROG DROP FOREIGN KEY MET;
ALTER TABLE METSTUPROG FOREIGN KEY MET (MITROO) REFERENCES MET;

SELECT MITROO FROM METSTUPROG WHERE MITROO NOT IN (SELECT MITROO FROM MET);

ERASE METSTUPROG_PROC;

STORE  METSTUPROG_PROC
PROCEDURE: METSTUPROG_PROC STATIC
 	PARAMETERS
   		String   	 	:sMODIFTYPE     
		String 		:sMITROO	 
		Number 		:nPROGCODE
		Number 		:nDEPCODE
		Number 		:nTOMCODE
		String	 	:sKAT
      		Number 		:nAK
    		Date/Time 	:dH_EGR
		String		:sEJ
		String		:sPRAXH
		Number		:nTOTBAU
		String		:sARDIPL
		Date/Time 	:dH_AIT
      		String	 	:sEKP_DIPL
		Date/Time 	:dDATEANAG
		String	 	:sPM
		Date/Time 	:dDATEANAGEST
		Date/Time 	:dDATETELANAGEST
		String	 	:sDATEEDE
		Number		:nETOSDIPL
		String	 	:sPERIODDIPL
 	LOCAL VARIABLES
   		SQL HANDLE: hSql1
   		SQL HANDLE: hSql2
 	ACTIONS
   		On Procedure Startup
    			Call SqlConnect( hSql1 )
    			Call SqlConnect( hSql2 )
   		On Procedure Execute
			Call SqlPrepare( hSql1 , 'INSERT INTO METSTUPROG_WEB(
										DATEMODIF, MODIFTYPE, MITROO, PROGCODE, DEPCODE, TOMCODE, KAT, AK, H_EGR, EJ, PRAXH, TOTBAU, ARDIPL, H_AIT, EKP_DIPL, DATEANAG, PM, 
										DATEANAGEST, DATETELANAGEST, DATEEDE, ETOSDIPL, PERIODDIPL)
     							      	       VALUES(
										SYSDATETIME, :sMODIFTYPE, :sMITROO, :nPROGCODE, :nDEPCODE, :nTOMCODE, :sKAT, :nAK, :dH_EGR, :sEJ, :sPRAXH, :nTOTBAU, :sARDIPL, :dH_AIT, :sEKP_DIPL, :dDATEANAG, :sPM, 
										:dDATEANAGEST, :dDATETELANAGEST, :sDATEEDE, :nETOSDIPL, :sPERIODDIPL)' )
    			Call SqlExecute( hSql1 )
    			Call SqlPrepare( hSql2 , 'INSERT INTO METSTUPROG_IST(
										USERNAME, DATEMODIF, MODIFTYPE, MITROO, PROGCODE, DEPCODE, TOMCODE, KAT, AK, H_EGR, EJ, PRAXH, TOTBAU, ARDIPL, H_AIT, EKP_DIPL, DATEANAG, PM, 
										DATEANAGEST, DATETELANAGEST, DATEEDE, ETOSDIPL, PERIODDIPL)
     							      	       VALUES(
										USER, SYSDATETIME, :sMODIFTYPE, :sMITROO, :nPROGCODE, :nDEPCODE, :nTOMCODE, :sKAT, :nAK, :dH_EGR, :sEJ, :sPRAXH, :nTOTBAU, :sARDIPL, :dH_AIT, :sEKP_DIPL, :dDATEANAG, :sPM, 
										:dDATEANAGEST, :dDATETELANAGEST, :sDATEEDE, :nETOSDIPL, :sPERIODDIPL)' )
    			Call SqlExecute( hSql2 )
   		On Procedure Close
    			Call SqlDisconnect( hSql1 )
    			Call SqlDisconnect( hSql2 );

CREATE TRIGGER SYSADM.METSTUPROG_INS AFTER INSERT ON METSTUPROG
	( EXECUTE METSTUPROG_PROC (
				'i', MITROO, PROGCODE, DEPCODE, TOMCODE, KAT, AK, H_EGR, EJ, PRAXH, TOTBAU, ARDIPL, H_AIT, EKP_DIPL, DATEANAG, PM, DATEANAGEST, DATETELANAGEST, DATEEDE, ETOSDIPL, PERIODDIPL) )
FOR EACH ROW;


CREATE TRIGGER SYSADM.METSTUPROG_DEL AFTER DELETE ON METSTUPROG
	( EXECUTE METSTUPROG_PROC (
				'd', MITROO, PROGCODE, DEPCODE, TOMCODE, KAT, AK, H_EGR, EJ, PRAXH, TOTBAU, ARDIPL, H_AIT, EKP_DIPL, DATEANAG, PM, DATEANAGEST, DATETELANAGEST, DATEEDE, ETOSDIPL, PERIODDIPL) )
FOR EACH ROW;


CREATE TRIGGER SYSADM.METSTUPROG_UPDT AFTER UPDATE ON METSTUPROG REFERENCING OLD AS OLD_METSTUPROG NEW AS NEW_METSTUPROG
  	( EXECUTE METSTUPROG_PROC (
				'u', MITROO, PROGCODE, DEPCODE, TOMCODE, KAT, AK, H_EGR, EJ, PRAXH, TOTBAU, ARDIPL, H_AIT, EKP_DIPL, DATEANAG, PM, DATEANAGEST, DATETELANAGEST, DATEEDE, ETOSDIPL, PERIODDIPL) )
FOR EACH ROW;

ALTER TABLE METANATHESI 	MODIFY MITROO VARCHAR(10);
ALTER TABLE METDIAKOP     	MODIFY MITROO VARCHAR(10);
ALTER TABLE METDSYNERG 	MODIFY MITROO VARCHAR(10);
ALTER TABLE METEGR		MODIFY MITROO VARCHAR(10);
ALTER TABLE METLANG		MODIFY MITROO VARCHAR(10);
ALTER TABLE METPROOD		MODIFY MITROO VARCHAR(10);
ALTER TABLE METPTYX		MODIFY MITROO VARCHAR(10);
ALTER TABLE METXRHMA		MODIFY MITROO VARCHAR(10);



